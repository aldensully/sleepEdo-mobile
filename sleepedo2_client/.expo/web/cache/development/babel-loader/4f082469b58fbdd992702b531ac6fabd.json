{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Alden\\\\Documents\\\\Code\\\\javascript\\\\mobile\\\\sleepedo2main\\\\sleepedo2_client\\\\node_modules\\\\react-native-modern-datepicker\\\\src\\\\datePicker\\\\DatePicker.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { createContext, useReducer, useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PropTypes from 'prop-types';\nimport { Calendar, SelectMonth, SelectTime } from \"./components\";\nimport { utils } from \"../utils\";\nvar options = {\n  backgroundColor: '#fff',\n  textHeaderColor: '#212c35',\n  textDefaultColor: '#2d4150',\n  selectedTextColor: '#fff',\n  mainColor: '#61dafb',\n  textSecondaryColor: '#7a92a5',\n  borderColor: 'rgba(122, 146, 165, 0.1)',\n  defaultFont: 'System',\n  headerFont: 'System',\n  textFontSize: 15,\n  textHeaderFontSize: 17,\n  headerAnimationDistance: 100,\n  daysAnimationDistance: 200\n};\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case 'set':\n      return _objectSpread(_objectSpread({}, state), action);\n\n    case 'toggleMonth':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        monthOpen: !state.monthOpen\n      });\n\n    case 'toggleTime':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        timeOpen: !state.timeOpen\n      });\n\n    default:\n      throw new Error('Unexpected action');\n  }\n};\n\nvar CalendarContext = createContext();\n\nvar useCalendar = function useCalendar() {\n  var contextValue = useContext(CalendarContext);\n  return contextValue;\n};\n\nvar DatePicker = function DatePicker(props) {\n  var calendarUtils = new utils(props);\n\n  var contextValue = _objectSpread(_objectSpread({}, props), {}, {\n    reverse: props.reverse === 'unset' ? !props.isGregorian : props.reverse,\n    options: _objectSpread(_objectSpread({}, options), props.options),\n    utils: calendarUtils,\n    state: useReducer(reducer, {\n      activeDate: props.current || calendarUtils.getToday(),\n      selectedDate: props.selected ? calendarUtils.getFormated(calendarUtils.getDate(props.selected)) : '',\n      monthOpen: props.mode === 'monthYear',\n      timeOpen: props.mode === 'time'\n    })\n  });\n\n  var _useState = useState(300),\n      _useState2 = _slicedToArray(_useState, 2),\n      minHeight = _useState2[0],\n      setMinHeight = _useState2[1];\n\n  var style = styles(contextValue.options);\n\n  var renderBody = function renderBody() {\n    switch (contextValue.mode) {\n      default:\n      case 'datepicker':\n        return React.createElement(React.Fragment, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }\n        }, React.createElement(Calendar, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }\n        }), React.createElement(SelectMonth, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }\n        }), React.createElement(SelectTime, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }\n        }));\n\n      case 'calendar':\n        return React.createElement(React.Fragment, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }\n        }, React.createElement(Calendar, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }\n        }), React.createElement(SelectMonth, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }\n        }));\n\n      case 'monthYear':\n        return React.createElement(SelectMonth, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 16\n          }\n        });\n\n      case 'time':\n        return React.createElement(SelectTime, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 16\n          }\n        });\n    }\n  };\n\n  return React.createElement(CalendarContext.Provider, {\n    value: contextValue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: [style.container, {\n      minHeight: minHeight\n    }, props.style],\n    onLayout: function onLayout(_ref) {\n      var nativeEvent = _ref.nativeEvent;\n      return setMinHeight(nativeEvent.layout.width * 0.9 + 55);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, renderBody()));\n};\n\nvar styles = function styles(theme) {\n  return StyleSheet.create({\n    container: {\n      backgroundColor: theme.backgroundColor,\n      position: 'relative',\n      width: '100%',\n      overflow: 'hidden'\n    }\n  });\n};\n\nvar optionsShape = {\n  backgroundColor: PropTypes.string,\n  textHeaderColor: PropTypes.string,\n  textDefaultColor: PropTypes.string,\n  selectedTextColor: PropTypes.string,\n  mainColor: PropTypes.string,\n  textSecondaryColor: PropTypes.string,\n  borderColor: PropTypes.string,\n  defaultFont: PropTypes.string,\n  headerFont: PropTypes.string,\n  textFontSize: PropTypes.number,\n  textHeaderFontSize: PropTypes.number,\n  headerAnimationDistance: PropTypes.number,\n  daysAnimationDistance: PropTypes.number\n};\nvar modeArray = ['datepicker', 'calendar', 'monthYear', 'time'];\nvar minuteIntervalArray = [1, 2, 3, 4, 5, 6, 10, 12, 15, 20, 30, 60];\nDatePicker.defaultProps = {\n  onSelectedChange: function onSelectedChange() {\n    return null;\n  },\n  onMonthYearChange: function onMonthYearChange() {\n    return null;\n  },\n  onTimeChange: function onTimeChange() {\n    return null;\n  },\n  onDateChange: function onDateChange() {\n    return null;\n  },\n  current: '',\n  selected: '',\n  minimumDate: '',\n  maximumDate: '',\n  selectorStartingYear: 0,\n  selectorEndingYear: 3000,\n  disableDateChange: false,\n  isGregorian: true,\n  configs: {},\n  reverse: 'unset',\n  options: {},\n  mode: 'datepicker',\n  minuteInterval: 5,\n  style: {}\n};\nDatePicker.propTypes = {\n  onSelectedChange: PropTypes.func,\n  onMonthYearChange: PropTypes.func,\n  onTimeChange: PropTypes.func,\n  onDateChange: PropTypes.func,\n  current: PropTypes.string,\n  selected: PropTypes.string,\n  minimumDate: PropTypes.string,\n  maximumDate: PropTypes.string,\n  selectorStartingYear: PropTypes.number,\n  selectorEndingYear: PropTypes.number,\n  disableDateChange: PropTypes.bool,\n  isGregorian: PropTypes.bool,\n  configs: PropTypes.object,\n  reverse: PropTypes.oneOf([true, false, 'unset']),\n  options: PropTypes.shape(optionsShape),\n  mode: PropTypes.oneOf(modeArray),\n  minuteInterval: PropTypes.oneOf(minuteIntervalArray),\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\n};\nexport { DatePicker, CalendarContext, useCalendar };","map":{"version":3,"sources":["C:/Users/Alden/Documents/Code/javascript/mobile/sleepedo2main/sleepedo2_client/node_modules/react-native-modern-datepicker/src/datePicker/DatePicker.js"],"names":["React","createContext","useReducer","useContext","useState","PropTypes","Calendar","SelectMonth","SelectTime","utils","options","backgroundColor","textHeaderColor","textDefaultColor","selectedTextColor","mainColor","textSecondaryColor","borderColor","defaultFont","headerFont","textFontSize","textHeaderFontSize","headerAnimationDistance","daysAnimationDistance","reducer","state","action","type","monthOpen","timeOpen","Error","CalendarContext","useCalendar","contextValue","DatePicker","props","calendarUtils","reverse","isGregorian","activeDate","current","getToday","selectedDate","selected","getFormated","getDate","mode","minHeight","setMinHeight","style","styles","renderBody","container","nativeEvent","layout","width","theme","StyleSheet","create","position","overflow","optionsShape","string","number","modeArray","minuteIntervalArray","defaultProps","onSelectedChange","onMonthYearChange","onTimeChange","onDateChange","minimumDate","maximumDate","selectorStartingYear","selectorEndingYear","disableDateChange","configs","minuteInterval","propTypes","func","bool","object","oneOf","shape","oneOfType","array"],"mappings":"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","sourcesContent":["import React, {createContext, useReducer, useContext, useState} from 'react';\nimport {View, StyleSheet} from 'react-native';\nimport PropTypes from 'prop-types';\n\nimport {Calendar, SelectMonth, SelectTime} from './components';\nimport {utils} from '../utils';\n\nconst options = {\n  backgroundColor: '#fff',\n  textHeaderColor: '#212c35',\n  textDefaultColor: '#2d4150',\n  selectedTextColor: '#fff',\n  mainColor: '#61dafb',\n  textSecondaryColor: '#7a92a5',\n  borderColor: 'rgba(122, 146, 165, 0.1)',\n  defaultFont: 'System',\n  headerFont: 'System',\n  textFontSize: 15,\n  textHeaderFontSize: 17,\n  headerAnimationDistance: 100,\n  daysAnimationDistance: 200,\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'set':\n      return {...state, ...action};\n    case 'toggleMonth':\n      return {...state, monthOpen: !state.monthOpen};\n    case 'toggleTime':\n      return {...state, timeOpen: !state.timeOpen};\n    default:\n      throw new Error('Unexpected action');\n  }\n};\n\nconst CalendarContext = createContext();\n\nconst useCalendar = () => {\n  const contextValue = useContext(CalendarContext);\n  return contextValue;\n};\n\nconst DatePicker = props => {\n  const calendarUtils = new utils(props);\n  const contextValue = {\n    ...props,\n    reverse: props.reverse === 'unset' ? !props.isGregorian : props.reverse,\n    options: {...options, ...props.options},\n    utils: calendarUtils,\n    state: useReducer(reducer, {\n      activeDate: props.current || calendarUtils.getToday(),\n      selectedDate: props.selected\n        ? calendarUtils.getFormated(calendarUtils.getDate(props.selected))\n        : '',\n      monthOpen: props.mode === 'monthYear',\n      timeOpen: props.mode === 'time',\n    }),\n  };\n  const [minHeight, setMinHeight] = useState(300);\n  const style = styles(contextValue.options);\n\n  const renderBody = () => {\n    switch (contextValue.mode) {\n      default:\n      case 'datepicker':\n        return (\n          <React.Fragment>\n            <Calendar />\n            <SelectMonth />\n            <SelectTime />\n          </React.Fragment>\n        );\n      case 'calendar':\n        return (\n          <React.Fragment>\n            <Calendar />\n            <SelectMonth />\n          </React.Fragment>\n        );\n      case 'monthYear':\n        return <SelectMonth />;\n      case 'time':\n        return <SelectTime />;\n    }\n  };\n\n  return (\n    <CalendarContext.Provider value={contextValue}>\n      <View\n        style={[style.container, {minHeight}, props.style]}\n        onLayout={({nativeEvent}) => setMinHeight(nativeEvent.layout.width * 0.9 + 55)}>\n        {renderBody()}\n      </View>\n    </CalendarContext.Provider>\n  );\n};\n\nconst styles = theme =>\n  StyleSheet.create({\n    container: {\n      backgroundColor: theme.backgroundColor,\n      position: 'relative',\n      width: '100%',\n      overflow: 'hidden',\n    },\n  });\n\nconst optionsShape = {\n  backgroundColor: PropTypes.string,\n  textHeaderColor: PropTypes.string,\n  textDefaultColor: PropTypes.string,\n  selectedTextColor: PropTypes.string,\n  mainColor: PropTypes.string,\n  textSecondaryColor: PropTypes.string,\n  borderColor: PropTypes.string,\n  defaultFont: PropTypes.string,\n  headerFont: PropTypes.string,\n  textFontSize: PropTypes.number,\n  textHeaderFontSize: PropTypes.number,\n  headerAnimationDistance: PropTypes.number,\n  daysAnimationDistance: PropTypes.number,\n};\nconst modeArray = ['datepicker', 'calendar', 'monthYear', 'time'];\nconst minuteIntervalArray = [1, 2, 3, 4, 5, 6, 10, 12, 15, 20, 30, 60];\n\nDatePicker.defaultProps = {\n  onSelectedChange: () => null,\n  onMonthYearChange: () => null,\n  onTimeChange: () => null,\n  onDateChange: () => null,\n  current: '',\n  selected: '',\n  minimumDate: '',\n  maximumDate: '',\n  selectorStartingYear: 0,\n  selectorEndingYear: 3000,\n  disableDateChange: false,\n  isGregorian: true,\n  configs: {},\n  reverse: 'unset',\n  options: {},\n  mode: 'datepicker',\n  minuteInterval: 5,\n  style: {},\n};\n\nDatePicker.propTypes = {\n  onSelectedChange: PropTypes.func,\n  onMonthYearChange: PropTypes.func,\n  onTimeChange: PropTypes.func,\n  onDateChange: PropTypes.func,\n  current: PropTypes.string,\n  selected: PropTypes.string,\n  minimumDate: PropTypes.string,\n  maximumDate: PropTypes.string,\n  selectorStartingYear: PropTypes.number,\n  selectorEndingYear: PropTypes.number,\n  disableDateChange: PropTypes.bool,\n  isGregorian: PropTypes.bool,\n  configs: PropTypes.object,\n  reverse: PropTypes.oneOf([true, false, 'unset']),\n  options: PropTypes.shape(optionsShape),\n  mode: PropTypes.oneOf(modeArray),\n  minuteInterval: PropTypes.oneOf(minuteIntervalArray),\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n};\n\nexport {DatePicker, CalendarContext, useCalendar};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Alden\\\\Documents\\\\Code\\\\javascript\\\\mobile\\\\sleepedo2main\\\\sleepedo2_client\\\\node_modules\\\\react-native-modern-datepicker\\\\src\\\\datePicker\\\\components\\\\Calendar.js\";\n\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { Header, Days } from '.';\nimport { useCalendar } from \"../DatePicker\";\n\nvar Calendar = function Calendar() {\n  var _useCalendar = useCalendar(),\n      options = _useCalendar.options,\n      state = _useCalendar.state,\n      utils = _useCalendar.utils,\n      onSelectedChange = _useCalendar.onSelectedChange;\n\n  var _state = _slicedToArray(state, 1),\n      mainState = _state[0];\n\n  var style = styles(options);\n\n  var _utils$useMonthAnimat = utils.useMonthAnimation(mainState.activeDate, options.daysAnimationDistance),\n      _utils$useMonthAnimat2 = _slicedToArray(_utils$useMonthAnimat, 2),\n      shownAnimation = _utils$useMonthAnimat2[0].shownAnimation,\n      changeMonthAnimation = _utils$useMonthAnimat2[1];\n\n  useEffect(function () {\n    mainState.selectedDate && onSelectedChange(mainState.selectedDate);\n  }, [mainState.selectedDate, onSelectedChange]);\n  return React.createElement(View, {\n    style: style.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    changeMonth: changeMonthAnimation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: [style.daysName, utils.flexDirection],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, utils.config.dayNamesShort.map(function (item) {\n    return React.createElement(Text, {\n      key: item,\n      style: style.daysNameText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, item);\n  })), React.createElement(View, {\n    style: style.daysContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, React.createElement(Animated.View, {\n    style: [style.days, shownAnimation],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, React.createElement(Days, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }))));\n};\n\nvar styles = function styles(theme) {\n  return StyleSheet.create({\n    container: {\n      flexDirection: 'column',\n      flex: 1\n    },\n    daysName: {\n      paddingBottom: 10,\n      marginBottom: 0,\n      alignItems: 'center',\n      justifyContent: 'space-around',\n      borderBottomColor: theme.borderColor,\n      borderBottomWidth: 1,\n      marginHorizontal: 15\n    },\n    daysNameText: {\n      fontFamily: theme.defaultFont,\n      color: theme.textSecondaryColor,\n      fontSize: theme.textFontSize\n    },\n    daysContainer: {\n      flex: 1,\n      position: 'relative',\n      overflow: 'hidden',\n      margin: 15,\n      marginTop: 5,\n      marginBottom: 0\n    },\n    days: {\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      top: 0,\n      right: 0\n    }\n  });\n};\n\nexport { Calendar };","map":{"version":3,"sources":["C:/Users/Alden/Documents/Code/javascript/mobile/sleepedo2main/sleepedo2_client/node_modules/react-native-modern-datepicker/src/datePicker/components/Calendar.js"],"names":["React","useEffect","Header","Days","useCalendar","Calendar","options","state","utils","onSelectedChange","mainState","style","styles","useMonthAnimation","activeDate","daysAnimationDistance","shownAnimation","changeMonthAnimation","selectedDate","container","daysName","flexDirection","config","dayNamesShort","map","item","daysNameText","daysContainer","days","theme","StyleSheet","create","flex","paddingBottom","marginBottom","alignItems","justifyContent","borderBottomColor","borderColor","borderBottomWidth","marginHorizontal","fontFamily","defaultFont","color","textSecondaryColor","fontSize","textFontSize","position","overflow","margin","marginTop","width","height","top","right"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;;AAGA,SAAQC,MAAR,EAAgBC,IAAhB,QAA2B,GAA3B;AACA,SAAQC,WAAR;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,qBAAkDD,WAAW,EAA7D;AAAA,MAAOE,OAAP,gBAAOA,OAAP;AAAA,MAAgBC,KAAhB,gBAAgBA,KAAhB;AAAA,MAAuBC,KAAvB,gBAAuBA,KAAvB;AAAA,MAA8BC,gBAA9B,gBAA8BA,gBAA9B;;AACA,8BAAoBF,KAApB;AAAA,MAAOG,SAAP;;AACA,MAAMC,KAAK,GAAGC,MAAM,CAACN,OAAD,CAApB;;AACA,8BAAiDE,KAAK,CAACK,iBAAN,CAC/CH,SAAS,CAACI,UADqC,EAE/CR,OAAO,CAACS,qBAFuC,CAAjD;AAAA;AAAA,MAAQC,cAAR,6BAAQA,cAAR;AAAA,MAAyBC,oBAAzB;;AAKAhB,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,SAAS,CAACQ,YAAV,IAA0BT,gBAAgB,CAACC,SAAS,CAACQ,YAAX,CAA1C;AACD,GAFQ,EAEN,CAACR,SAAS,CAACQ,YAAX,EAAyBT,gBAAzB,CAFM,CAAT;AAIA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,KAAK,CAACQ,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAEF,oBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACN,KAAK,CAACS,QAAP,EAAiBZ,KAAK,CAACa,aAAvB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,KAAK,CAACc,MAAN,CAAaC,aAAb,CAA2BC,GAA3B,CAA+B,UAAAC,IAAI;AAAA,WAClC,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAX;AAAiB,MAAA,KAAK,EAAEd,KAAK,CAACe,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IADH,CADkC;AAAA,GAAnC,CADH,CAFF,EASE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEd,KAAK,CAACgB,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAE,CAAChB,KAAK,CAACiB,IAAP,EAAaZ,cAAb,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CATF,CADF;AAiBD,CA9BD;;AAgCA,IAAMJ,MAAM,GAAG,SAATA,MAAS,CAAAiB,KAAK;AAAA,SAClBC,UAAU,CAACC,MAAX,CAAkB;AAChBZ,IAAAA,SAAS,EAAE;AACTE,MAAAA,aAAa,EAAE,QADN;AAETW,MAAAA,IAAI,EAAE;AAFG,KADK;AAKhBZ,IAAAA,QAAQ,EAAE;AACRa,MAAAA,aAAa,EAAE,EADP;AAERC,MAAAA,YAAY,EAAE,CAFN;AAGRC,MAAAA,UAAU,EAAE,QAHJ;AAIRC,MAAAA,cAAc,EAAE,cAJR;AAKRC,MAAAA,iBAAiB,EAAER,KAAK,CAACS,WALjB;AAMRC,MAAAA,iBAAiB,EAAE,CANX;AAORC,MAAAA,gBAAgB,EAAE;AAPV,KALM;AAchBd,IAAAA,YAAY,EAAE;AACZe,MAAAA,UAAU,EAAEZ,KAAK,CAACa,WADN;AAEZC,MAAAA,KAAK,EAAEd,KAAK,CAACe,kBAFD;AAGZC,MAAAA,QAAQ,EAAEhB,KAAK,CAACiB;AAHJ,KAdE;AAmBhBnB,IAAAA,aAAa,EAAE;AACbK,MAAAA,IAAI,EAAE,CADO;AAEbe,MAAAA,QAAQ,EAAE,UAFG;AAGbC,MAAAA,QAAQ,EAAE,QAHG;AAIbC,MAAAA,MAAM,EAAE,EAJK;AAKbC,MAAAA,SAAS,EAAE,CALE;AAMbhB,MAAAA,YAAY,EAAE;AAND,KAnBC;AA2BhBN,IAAAA,IAAI,EAAE;AACJmB,MAAAA,QAAQ,EAAE,UADN;AAEJI,MAAAA,KAAK,EAAE,MAFH;AAGJC,MAAAA,MAAM,EAAE,MAHJ;AAIJC,MAAAA,GAAG,EAAE,CAJD;AAKJC,MAAAA,KAAK,EAAE;AALH;AA3BU,GAAlB,CADkB;AAAA,CAApB;;AAqCA,SAAQjD,QAAR","sourcesContent":["import React, {useEffect} from 'react';\nimport {View, StyleSheet, Text, Animated} from 'react-native';\n\nimport {Header, Days} from '.';\nimport {useCalendar} from '../DatePicker';\n\nconst Calendar = () => {\n  const {options, state, utils, onSelectedChange} = useCalendar();\n  const [mainState] = state;\n  const style = styles(options);\n  const [{shownAnimation}, changeMonthAnimation] = utils.useMonthAnimation(\n    mainState.activeDate,\n    options.daysAnimationDistance,\n  );\n\n  useEffect(() => {\n    mainState.selectedDate && onSelectedChange(mainState.selectedDate);\n  }, [mainState.selectedDate, onSelectedChange]);\n\n  return (\n    <View style={style.container}>\n      <Header changeMonth={changeMonthAnimation} />\n      <View style={[style.daysName, utils.flexDirection]}>\n        {utils.config.dayNamesShort.map(item => (\n          <Text key={item} style={style.daysNameText}>\n            {item}\n          </Text>\n        ))}\n      </View>\n      <View style={style.daysContainer}>\n        <Animated.View style={[style.days, shownAnimation]}>\n          <Days />\n        </Animated.View>\n      </View>\n    </View>\n  );\n};\n\nconst styles = theme =>\n  StyleSheet.create({\n    container: {\n      flexDirection: 'column',\n      flex: 1,\n    },\n    daysName: {\n      paddingBottom: 10,\n      marginBottom: 0,\n      alignItems: 'center',\n      justifyContent: 'space-around',\n      borderBottomColor: theme.borderColor,\n      borderBottomWidth: 1,\n      marginHorizontal: 15,\n    },\n    daysNameText: {\n      fontFamily: theme.defaultFont,\n      color: theme.textSecondaryColor,\n      fontSize: theme.textFontSize,\n    },\n    daysContainer: {\n      flex: 1,\n      position: 'relative',\n      overflow: 'hidden',\n      margin: 15,\n      marginTop: 5,\n      marginBottom: 0,\n    },\n    days: {\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      top: 0,\n      right: 0,\n    },\n  });\n\nexport {Calendar};\n"]},"metadata":{},"sourceType":"module"}
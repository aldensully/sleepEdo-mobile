{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alden\\\\Documents\\\\Code\\\\javascript\\\\mobile\\\\sleepedo2main\\\\sleepedo2_client\\\\components\\\\chatbox.js\";\nimport React, { useState, useEffect, useContext, useCallback } from 'react';\nimport { SocketContext } from \"./socket\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TouchableOpacityBase } from \"react-native-web/dist/index\";\nvar styles = StyleSheet.create({\n  paper: {\n    width: '70%',\n    maxWidth: '70%',\n    height: '10vh',\n    backgroundColor: 'inherit',\n    marginTop: '1vh',\n    position: 'relative',\n    zIndex: 5,\n    borderRadius: '10px',\n    boxShadow: '0 0 20px 3px #16181c'\n  },\n  topBar: {\n    width: '100%',\n    height: '1vh',\n    backgroundColor: '#2b2f36',\n    borderRadius: 0,\n    display: 'flex',\n    borderTopLeftRadius: '10px',\n    borderTopRightRadius: '10px',\n    borderBottom: '0.5px solid #212121'\n  },\n  topBarText: {\n    fontSize: 10,\n    padding: 2,\n    color: '#bdbdbd'\n  },\n  chatbox: {\n    backgroundColor: '#282c34',\n    height: '100%',\n    maxHeight: '5vh',\n    width: '100%',\n    overflow: 'auto',\n    display: 'flex',\n    justifyContent: 'flex-end',\n    flexDirection: 'column'\n  },\n  messageinbox: {\n    fontFamily: 'sans-serif',\n    padding: '2px',\n    width: '60%',\n    borderRadius: '5px',\n    wordWrap: 'break-word',\n    height: 'fit-content',\n    backgroundColor: '#363a42',\n    color: '#f3f3f3',\n    marginTop: '5px',\n    alignSelf: 'flex-start',\n    boxShadow: '0 0 20px 1px #1f2229'\n  },\n  messageoutbox: {\n    width: '60%',\n    borderRadius: '5px',\n    wordWrap: 'break-word',\n    height: 'fit-content',\n    backgroundColor: '#3e4c59',\n    color: '#f3f3f3',\n    marginTop: '20px',\n    alignSelf: 'flex-end',\n    boxShadow: '0 0 20px 1px #1f2229'\n  },\n  messagetext: {\n    color: '#bdbdbd'\n  }\n});\nexport default function Chatbox(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      dismissOpen = _useState2[0],\n      setDismissOpen = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dismissCount = _useState4[0],\n      setDismissCount = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      snoozeCount = _useState6[0],\n      setSnoozeCount = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      room = _useState8[0],\n      setRoom = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      alarmId = _useState10[0],\n      setAlarmId = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      disconnected = _useState12[0],\n      setDisconnected = _useState12[1];\n\n  var _useState13 = useState(true),\n      _useState14 = _slicedToArray(_useState13, 2),\n      modalOpen = _useState14[0],\n      setModalOpen = _useState14[1];\n\n  var socket = useContext(SocketContext);\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      text = _useState16[0],\n      setText = _useState16[1];\n\n  var getMessage = useCallback(function (message) {\n    console.log('received message: ', message);\n  }, []);\n  var triggered = useCallback(function (room, alarmId) {\n    console.log('joining room: ', room);\n    setRoom(room);\n    setAlarmId(alarmId);\n    setModalOpen(true);\n  }, []);\n  var resetStuff = useCallback(function () {\n    setModalOpen(false);\n    setDismissOpen(true);\n    setSnoozeCount(0);\n    setDismissCount(0);\n  }, []);\n  var disconnection = useCallback(function () {\n    setDisconnected(true);\n    setModalOpen(false);\n  }, []);\n  useEffect(function () {\n    socket.on('triggered', function (room, alarmId) {\n      triggered(room, alarmId);\n    });\n    socket.on('get-message', function (message) {\n      getMessage(message);\n    });\n    socket.on('get-snooze', function () {\n      setSnoozeCount(snoozeCount + 1);\n    });\n    socket.on('get-dismiss', function () {\n      setDismissCount(dismissCount + 1);\n    });\n    socket.on('snooze-begin', function () {\n      console.log('snooze for 9 minutes!');\n      resetStuff();\n    });\n    socket.on('dismiss-begin', function () {\n      console.log('both users have dismissed alarm!');\n    });\n    socket.on('room-disconnect', function () {\n      console.log('time up, disconnected from room');\n      resetStuff();\n      disconnection();\n    });\n    return function () {\n      socket.offAny();\n    };\n  }, [socket, getMessage, resetStuff, disconnection, triggered]);\n\n  function dismiss() {\n    setDismissCount(dismissCount + 1);\n    socket.emit('send-dismiss', room, alarmId);\n    setDismissOpen(false);\n  }\n\n  function snooze() {\n    setSnoozeCount(snoozeCount + 1);\n    socket.emit('send-snooze', room, alarmId);\n    setDismissOpen(false);\n  }\n\n  var sendText = useCallback(function (e) {\n    e.preventDefault();\n    socket.emit('send-message', sessionStorage.getItem('username'), text, room);\n    addOutTexts(text);\n    setText('');\n  }, [socket, text]);\n  var dismissButton;\n\n  if (dismissOpen) {\n    dismissButton = React.createElement(View, {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        position: 'relative',\n        zIndex: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: snooze,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, \"Vote Snooze \", \"(\" + snoozeCount + \"/2)\")), React.createElement(TouchableOpacity, {\n      onPress: dismiss,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    }, \"Dismiss \", \"(\" + dismissCount + \"/2)\")));\n  }\n\n  if (modalOpen) {\n    return React.createElement(View, {\n      style: styles.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.topBar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styles.topBarText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }\n    }, \"Chat - Rainbow69\"), dismissButton), React.createElement(View, {\n      id: \"chatbox\",\n      style: styles.chatbox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }), React.createElement(View, {\n      style: styles.bottomContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }, React.createElement(TextInput, {\n      value: text,\n      placeholder: \"Write a message..\",\n      autoFocus: true,\n      style: styles.textfield,\n      onChange: function onChange(e) {\n        return setText(e.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }\n    }), React.createElement(TouchableOpacity, {\n      onPress: sendText,\n      style: styles.sendButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }\n    }, \"Send\")));\n  } else return null;\n}","map":{"version":3,"sources":["C:/Users/Alden/Documents/Code/javascript/mobile/sleepedo2main/sleepedo2_client/components/chatbox.js"],"names":["React","useState","useEffect","useContext","useCallback","SocketContext","TouchableOpacityBase","styles","StyleSheet","create","paper","width","maxWidth","height","backgroundColor","marginTop","position","zIndex","borderRadius","boxShadow","topBar","display","borderTopLeftRadius","borderTopRightRadius","borderBottom","topBarText","fontSize","padding","color","chatbox","maxHeight","overflow","justifyContent","flexDirection","messageinbox","fontFamily","wordWrap","alignSelf","messageoutbox","messagetext","Chatbox","props","dismissOpen","setDismissOpen","dismissCount","setDismissCount","snoozeCount","setSnoozeCount","room","setRoom","alarmId","setAlarmId","disconnected","setDisconnected","modalOpen","setModalOpen","socket","text","setText","getMessage","message","console","log","triggered","resetStuff","disconnection","on","offAny","dismiss","emit","snooze","sendText","e","preventDefault","sessionStorage","getItem","addOutTexts","dismissButton","bottomContainer","textfield","target","value","sendButton"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useCallback } from 'react';\r\nimport { SocketContext } from './socket';\r\nimport { TouchableOpacity, StyleSheet, Text, TextInput, View, TouchableOpacityBase } from 'react-native';\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    paper: {\r\n        width: '70%',\r\n        maxWidth: '70%',\r\n        height: '10vh',\r\n        backgroundColor: 'inherit',\r\n        marginTop: '1vh',\r\n        position: 'relative',\r\n        zIndex: 5,\r\n        borderRadius: '10px',\r\n        boxShadow: '0 0 20px 3px #16181c',\r\n    },\r\n    topBar: {\r\n        width: '100%',\r\n        height: '1vh',\r\n        backgroundColor: '#2b2f36',\r\n        borderRadius: 0,\r\n        display: 'flex',\r\n        borderTopLeftRadius: '10px',\r\n        borderTopRightRadius: '10px',\r\n        borderBottom: '0.5px solid #212121',\r\n\r\n    },\r\n    topBarText: {\r\n        fontSize: 10,\r\n        padding: 2,\r\n        color: '#bdbdbd'\r\n    },\r\n    chatbox: {\r\n        backgroundColor: '#282c34',\r\n        height: '100%',\r\n        maxHeight: '5vh',\r\n        width: '100%',\r\n        overflow: 'auto',\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        flexDirection: 'column',\r\n    },\r\n    messageinbox: {\r\n        fontFamily: 'sans-serif',\r\n        padding: '2px',\r\n        width: '60%',\r\n        borderRadius: '5px',\r\n        wordWrap: 'break-word',\r\n        height: 'fit-content',\r\n        backgroundColor: '#363a42',\r\n        color: '#f3f3f3',\r\n        marginTop: '5px',\r\n        alignSelf: 'flex-start',\r\n        boxShadow: '0 0 20px 1px #1f2229'\r\n\r\n    },\r\n    messageoutbox: {\r\n        width: '60%',\r\n        borderRadius: '5px',\r\n        wordWrap: 'break-word',\r\n        height: 'fit-content',\r\n        backgroundColor: '#3e4c59',\r\n        color: '#f3f3f3',\r\n        marginTop: '20px',\r\n        alignSelf: 'flex-end',\r\n        boxShadow: '0 0 20px 1px #1f2229'\r\n\r\n    },\r\n    messagetext: {\r\n        color: '#bdbdbd',\r\n    },\r\n})\r\n\r\nexport default function Chatbox(props) {\r\n\r\n    const [dismissOpen, setDismissOpen] = useState(false);\r\n    const [dismissCount, setDismissCount] = useState(0);\r\n    const [snoozeCount, setSnoozeCount] = useState(0);\r\n    const [room, setRoom] = useState('');\r\n    const [alarmId, setAlarmId] = useState('');\r\n    const [disconnected, setDisconnected] = useState(false);\r\n    const [modalOpen, setModalOpen] = useState(true);\r\n    const socket = useContext(SocketContext);\r\n    const [text, setText] = useState('');\r\n\r\n\r\n    const getMessage = useCallback((message) => {\r\n        console.log('received message: ', message);\r\n\r\n    }, []);\r\n\r\n    const triggered = useCallback((room, alarmId) => {\r\n        console.log('joining room: ', room);\r\n        setRoom(room);\r\n        setAlarmId(alarmId);\r\n        setModalOpen(true);\r\n    }, []);\r\n\r\n    const resetStuff = useCallback(() => {\r\n        setModalOpen(false);\r\n        setDismissOpen(true);\r\n        setSnoozeCount(0);\r\n        setDismissCount(0);\r\n    }, []);\r\n\r\n    const disconnection = useCallback(() => {\r\n        setDisconnected(true);\r\n        setModalOpen(false);\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        socket.on('triggered', (room, alarmId) => {\r\n            triggered(room, alarmId);\r\n        });\r\n        socket.on('get-message', (message) => {\r\n            getMessage(message);\r\n        });\r\n        socket.on('get-snooze', () => {\r\n            setSnoozeCount(snoozeCount + 1);  //other user hit snooze\r\n        })\r\n        socket.on('get-dismiss', () => {\r\n            setDismissCount(dismissCount + 1); //other user hit dismiss\r\n        })\r\n        socket.on('snooze-begin', () => {\r\n            console.log('snooze for 9 minutes!');\r\n            resetStuff();\r\n        })\r\n        socket.on('dismiss-begin', () => {\r\n            console.log('both users have dismissed alarm!');\r\n        })\r\n        socket.on('room-disconnect', () => {\r\n            console.log('time up, disconnected from room');\r\n            resetStuff();\r\n            disconnection();\r\n        })\r\n        return () => {\r\n            socket.offAny();\r\n        }\r\n    }, [socket, getMessage, resetStuff, disconnection, triggered])\r\n\r\n\r\n\r\n    function dismiss() {\r\n        setDismissCount(dismissCount + 1);\r\n        socket.emit('send-dismiss', room, alarmId);\r\n        setDismissOpen(false);\r\n    }\r\n    function snooze() {\r\n        setSnoozeCount(snoozeCount + 1);\r\n        socket.emit('send-snooze', room, alarmId);   //tell other user that you hit snooze\r\n        setDismissOpen(false);\r\n    }\r\n\r\n    const sendText = useCallback((e) => {\r\n        e.preventDefault();\r\n        socket.emit('send-message', sessionStorage.getItem('username'), text, room);   //when modal is closed this function is called\r\n        addOutTexts(text);\r\n        setText('');\r\n\r\n    }, [socket, text]);\r\n\r\n    let dismissButton;\r\n    if (dismissOpen) {\r\n        dismissButton =\r\n            <View style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center', position: 'relative', zIndex: 4 }}>\r\n                <TouchableOpacity onPress={snooze}>\r\n                    <Text variant='h6'>Vote Snooze {`(${snoozeCount}/2)`}</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity onPress={dismiss}>\r\n                    <Text variant='h6'>Dismiss {`(${dismissCount}/2)`}</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n    }\r\n\r\n    if (modalOpen) {\r\n        return (\r\n            <View style={styles.paper}>\r\n                <View style={styles.topBar}>\r\n                    <Text style={styles.topBarText}>Chat - Rainbow69</Text>\r\n                    {dismissButton}\r\n                </View>\r\n                <View id='chatbox' style={styles.chatbox}>\r\n                </View>\r\n\r\n                <View style={styles.bottomContainer}>\r\n                    <TextInput value={text} placeholder='Write a message..' autoFocus style={styles.textfield} onChange={(e) => setText(e.target.value)}></TextInput>\r\n                    <TouchableOpacity onPress={sendText} style={styles.sendButton}>Send</TouchableOpacity>\r\n                </View>\r\n\r\n            </View>\r\n        )\r\n    }\r\n    else return null;\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Alden\\\\Documents\\\\Code\\\\javascript\\\\mobile\\\\sleepedo2main\\\\sleepedo2_client\\\\node_modules\\\\react-native-modern-datepicker\\\\src\\\\datePicker\\\\components\\\\Header.js\";\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport { useCalendar } from \"../DatePicker\";\n\nvar Header = function Header(_ref) {\n  var changeMonth = _ref.changeMonth;\n\n  var _useCalendar = useCalendar(),\n      options = _useCalendar.options,\n      disableDateChange = _useCalendar.disableDateChange,\n      state = _useCalendar.state,\n      utils = _useCalendar.utils,\n      minimumDate = _useCalendar.minimumDate,\n      maximumDate = _useCalendar.maximumDate,\n      isGregorian = _useCalendar.isGregorian,\n      mode = _useCalendar.mode;\n\n  var _state = _slicedToArray(state, 2),\n      mainState = _state[0],\n      setMainState = _state[1];\n\n  var style = styles(options);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      disableChange = _useState2[0],\n      setDisableChange = _useState2[1];\n\n  var _utils$useMonthAnimat = utils.useMonthAnimation(mainState.activeDate, options.headerAnimationDistance, function () {\n    return setDisableChange(false);\n  }),\n      _utils$useMonthAnimat2 = _slicedToArray(_utils$useMonthAnimat, 2),\n      _utils$useMonthAnimat3 = _utils$useMonthAnimat2[0],\n      lastDate = _utils$useMonthAnimat3.lastDate,\n      shownAnimation = _utils$useMonthAnimat3.shownAnimation,\n      hiddenAnimation = _utils$useMonthAnimat3.hiddenAnimation,\n      changeMonthAnimation = _utils$useMonthAnimat2[1];\n\n  var prevDisable = disableDateChange || minimumDate && utils.checkArrowMonthDisabled(mainState.activeDate, true);\n  var nextDisable = disableDateChange || maximumDate && utils.checkArrowMonthDisabled(mainState.activeDate, false);\n\n  var onChangeMonth = function onChangeMonth(type) {\n    if (disableChange) return;\n    setDisableChange(true);\n    changeMonthAnimation(type);\n    var modificationNumber = type === 'NEXT' ? 1 : -1;\n    var newDate = utils.getDate(mainState.activeDate).add(modificationNumber, isGregorian ? 'month' : 'jMonth');\n    setMainState({\n      type: 'set',\n      activeDate: utils.getFormated(newDate)\n    });\n    changeMonth(type);\n  };\n\n  return React.createElement(View, {\n    style: [style.container, I18nManager.isRTL && style.reverseContainer],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    activeOpacity: 0.7,\n    onPress: function onPress() {\n      return !nextDisable && onChangeMonth('NEXT');\n    },\n    style: style.arrowWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/arrow.png\"),\n    style: [style.arrow, nextDisable && style.disableArrow],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: style.monthYearContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, React.createElement(Animated.View, {\n    style: [style.monthYear, shownAnimation, style.activeMonthYear, I18nManager.isRTL && style.reverseMonthYear],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    activeOpacity: 0.7,\n    style: [style.centerWrapper, style.monthYearWrapper, utils.flexDirection],\n    onPress: function onPress() {\n      return !disableDateChange && setMainState({\n        type: 'toggleMonth'\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: [style.headerText, style.monthText],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, utils.getMonthYearText(mainState.activeDate).split(' ')[0]), React.createElement(Text, {\n    style: [style.headerText, style.monthText],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, utils.getMonthYearText(mainState.activeDate).split(' ')[1])), mode === 'datepicker' && React.createElement(TouchableOpacity, {\n    activeOpacity: 0.7,\n    style: [style.centerWrapper, {\n      marginRight: I18nManager.isRTL ? 0 : 5,\n      marginLeft: I18nManager.isRTL ? 5 : 0\n    }],\n    onPress: function onPress() {\n      return setMainState({\n        type: 'toggleTime'\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: style.headerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, utils.toPersianNumber(utils.getTime(mainState.activeDate))))), React.createElement(Animated.View, {\n    style: [style.monthYear, hiddenAnimation, utils.flexDirection, I18nManager.isRTL && style.reverseMonthYear],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: style.headerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, utils.getMonthYearText(lastDate).split(' ')[0]), React.createElement(Text, {\n    style: style.headerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, utils.getMonthYearText(lastDate).split(' ')[1]), mode === 'datepicker' && React.createElement(Text, {\n    style: style.headerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, utils.toPersianNumber(utils.getTime(mainState.activeDate))))), React.createElement(TouchableOpacity, {\n    activeOpacity: 0.7,\n    onPress: function onPress() {\n      return !prevDisable && onChangeMonth('PREVIOUS');\n    },\n    style: style.arrowWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/arrow.png\"),\n    style: [style.arrow, style.leftArrow, prevDisable && style.disableArrow],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar styles = function styles(theme) {\n  return StyleSheet.create({\n    container: {\n      alignItems: 'center',\n      flexDirection: 'row-reverse'\n    },\n    reverseContainer: {\n      flexDirection: 'row'\n    },\n    arrowWrapper: {\n      padding: 20,\n      position: 'relative',\n      zIndex: 1,\n      opacity: 1\n    },\n    arrow: {\n      width: 18,\n      height: 18,\n      opacity: 0.9,\n      tintColor: theme.mainColor,\n      margin: 2\n    },\n    leftArrow: {\n      transform: [{\n        rotate: '180deg'\n      }]\n    },\n    disableArrow: {\n      opacity: 0\n    },\n    monthYearContainer: {\n      flex: 1,\n      position: 'relative',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    monthYear: {\n      position: 'absolute',\n      alignItems: 'center',\n      flexDirection: 'row-reverse'\n    },\n    reverseMonthYear: {\n      flexDirection: 'row'\n    },\n    activeMonthYear: {\n      zIndex: 999\n    },\n    monthYearWrapper: {\n      alignItems: 'center'\n    },\n    headerText: {\n      fontSize: theme.textHeaderFontSize,\n      padding: 2,\n      color: theme.textHeaderColor,\n      fontFamily: theme.defaultFont,\n      textAlignVertical: 'center'\n    },\n    monthText: {\n      fontFamily: theme.headerFont\n    },\n    centerWrapper: {\n      borderColor: theme.borderColor,\n      paddingVertical: 4,\n      paddingHorizontal: 8,\n      alignItems: 'center',\n      borderRadius: 5,\n      borderWidth: 1\n    },\n    time: {\n      marginRight: 5\n    }\n  });\n};\n\nHeader.defaultProps = {\n  changeMonth: function changeMonth() {\n    return null;\n  }\n};\nHeader.propTypes = {\n  changeMonth: PropTypes.func\n};\nexport { Header };","map":{"version":3,"sources":["C:/Users/Alden/Documents/Code/javascript/mobile/sleepedo2main/sleepedo2_client/node_modules/react-native-modern-datepicker/src/datePicker/components/Header.js"],"names":["React","useState","PropTypes","useCalendar","Header","changeMonth","options","disableDateChange","state","utils","minimumDate","maximumDate","isGregorian","mode","mainState","setMainState","style","styles","disableChange","setDisableChange","useMonthAnimation","activeDate","headerAnimationDistance","lastDate","shownAnimation","hiddenAnimation","changeMonthAnimation","prevDisable","checkArrowMonthDisabled","nextDisable","onChangeMonth","type","modificationNumber","newDate","getDate","add","getFormated","container","I18nManager","isRTL","reverseContainer","arrowWrapper","require","arrow","disableArrow","monthYearContainer","monthYear","activeMonthYear","reverseMonthYear","centerWrapper","monthYearWrapper","flexDirection","headerText","monthText","getMonthYearText","split","marginRight","marginLeft","toPersianNumber","getTime","leftArrow","theme","StyleSheet","create","alignItems","padding","position","zIndex","opacity","width","height","tintColor","mainColor","margin","transform","rotate","flex","justifyContent","fontSize","textHeaderFontSize","color","textHeaderColor","fontFamily","defaultFont","textAlignVertical","headerFont","borderColor","paddingVertical","paddingHorizontal","borderRadius","borderWidth","time","defaultProps","propTypes","func"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {View, TouchableOpacity, Text, Image, StyleSheet, Animated, I18nManager} from 'react-native';\n\nimport {useCalendar} from '../DatePicker';\n\nconst Header = ({changeMonth}) => {\n  const {\n    options,\n    disableDateChange,\n    state,\n    utils,\n    minimumDate,\n    maximumDate,\n    isGregorian,\n    mode,\n  } = useCalendar();\n  const [mainState, setMainState] = state;\n  const style = styles(options);\n  const [disableChange, setDisableChange] = useState(false);\n  const [\n    {lastDate, shownAnimation, hiddenAnimation},\n    changeMonthAnimation,\n  ] = utils.useMonthAnimation(mainState.activeDate, options.headerAnimationDistance, () =>\n    setDisableChange(false),\n  );\n  const prevDisable =\n    disableDateChange || (minimumDate && utils.checkArrowMonthDisabled(mainState.activeDate, true));\n  const nextDisable =\n    disableDateChange ||\n    (maximumDate && utils.checkArrowMonthDisabled(mainState.activeDate, false));\n\n  const onChangeMonth = (type) => {\n    if (disableChange) return;\n    setDisableChange(true);\n    changeMonthAnimation(type);\n    const modificationNumber = type === 'NEXT' ? 1 : -1;\n    const newDate = utils\n      .getDate(mainState.activeDate)\n      .add(modificationNumber, isGregorian ? 'month' : 'jMonth');\n    setMainState({\n      type: 'set',\n      activeDate: utils.getFormated(newDate),\n    });\n    changeMonth(type);\n  };\n\n  return (\n    <View style={[style.container, I18nManager.isRTL && style.reverseContainer]}>\n      <TouchableOpacity\n        activeOpacity={0.7}\n        onPress={() => !nextDisable && onChangeMonth('NEXT')}\n        style={style.arrowWrapper}>\n        <Image\n          source={require('../../assets/arrow.png')}\n          style={[style.arrow, nextDisable && style.disableArrow]}\n        />\n      </TouchableOpacity>\n      <View style={style.monthYearContainer}>\n        <Animated.View\n          style={[\n            style.monthYear,\n            shownAnimation,\n            style.activeMonthYear,\n            I18nManager.isRTL && style.reverseMonthYear,\n          ]}>\n          <TouchableOpacity\n            activeOpacity={0.7}\n            style={[style.centerWrapper, style.monthYearWrapper, utils.flexDirection]}\n            onPress={() =>\n              !disableDateChange &&\n              setMainState({\n                type: 'toggleMonth',\n              })\n            }>\n            <Text style={[style.headerText, style.monthText]}>\n              {utils.getMonthYearText(mainState.activeDate).split(' ')[0]}\n            </Text>\n            <Text style={[style.headerText, style.monthText]}>\n              {utils.getMonthYearText(mainState.activeDate).split(' ')[1]}\n            </Text>\n          </TouchableOpacity>\n          {mode === 'datepicker' && (\n            <TouchableOpacity\n              activeOpacity={0.7}\n              style={[\n                style.centerWrapper,\n                {marginRight: I18nManager.isRTL ? 0 : 5, marginLeft: I18nManager.isRTL ? 5 : 0},\n              ]}\n              onPress={() =>\n                setMainState({\n                  type: 'toggleTime',\n                })\n              }>\n              <Text style={style.headerText}>\n                {utils.toPersianNumber(utils.getTime(mainState.activeDate))}\n              </Text>\n            </TouchableOpacity>\n          )}\n        </Animated.View>\n        <Animated.View\n          style={[\n            style.monthYear,\n            hiddenAnimation,\n            utils.flexDirection,\n            I18nManager.isRTL && style.reverseMonthYear,\n          ]}>\n          <Text style={style.headerText}>{utils.getMonthYearText(lastDate).split(' ')[0]}</Text>\n          <Text style={style.headerText}>{utils.getMonthYearText(lastDate).split(' ')[1]}</Text>\n          {mode === 'datepicker' && (\n            <Text style={style.headerText}>\n              {utils.toPersianNumber(utils.getTime(mainState.activeDate))}\n            </Text>\n          )}\n        </Animated.View>\n      </View>\n      <TouchableOpacity\n        activeOpacity={0.7}\n        onPress={() => !prevDisable && onChangeMonth('PREVIOUS')}\n        style={style.arrowWrapper}>\n        <Image\n          source={require('../../assets/arrow.png')}\n          style={[style.arrow, style.leftArrow, prevDisable && style.disableArrow]}\n        />\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    container: {\n      alignItems: 'center',\n      flexDirection: 'row-reverse',\n    },\n    reverseContainer: {\n      flexDirection: 'row',\n    },\n    arrowWrapper: {\n      padding: 20,\n      position: 'relative',\n      zIndex: 1,\n      opacity: 1,\n    },\n    arrow: {\n      width: 18,\n      height: 18,\n      opacity: 0.9,\n      tintColor: theme.mainColor,\n      margin: 2,\n    },\n    leftArrow: {\n      transform: [\n        {\n          rotate: '180deg',\n        },\n      ],\n    },\n    disableArrow: {\n      opacity: 0,\n    },\n    monthYearContainer: {\n      flex: 1,\n      position: 'relative',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    monthYear: {\n      position: 'absolute',\n      alignItems: 'center',\n      flexDirection: 'row-reverse',\n    },\n    reverseMonthYear: {\n      flexDirection: 'row',\n    },\n    activeMonthYear: {\n      zIndex: 999,\n    },\n    monthYearWrapper: {\n      alignItems: 'center',\n    },\n    headerText: {\n      fontSize: theme.textHeaderFontSize,\n      padding: 2,\n      color: theme.textHeaderColor,\n      fontFamily: theme.defaultFont,\n      textAlignVertical: 'center',\n    },\n    monthText: {\n      fontFamily: theme.headerFont,\n    },\n    centerWrapper: {\n      borderColor: theme.borderColor,\n      paddingVertical: 4,\n      paddingHorizontal: 8,\n      alignItems: 'center',\n      borderRadius: 5,\n      borderWidth: 1,\n    },\n    time: {\n      marginRight: 5,\n    },\n  });\n\nHeader.defaultProps = {\n  changeMonth: () => null,\n};\n\nHeader.propTypes = {\n  changeMonth: PropTypes.func,\n};\n\nexport {Header};\n"]},"metadata":{},"sourceType":"module"}
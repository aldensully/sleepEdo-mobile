{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alden\\\\Documents\\\\Code\\\\javascript\\\\mobile\\\\sleepedo2main\\\\sleepedo2_client\\\\components\\\\login.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport default function Login(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  function createAccount() {\n    var res;\n    return _regeneratorRuntime.async(function createAccount$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('trying to create account');\n\n            if (!(password.length > 5)) {\n              _context.next = 15;\n              break;\n            }\n\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.post('http://localhost:5000/createaccount', {\n              username: username,\n              password: password,\n              email: email\n            }));\n\n          case 4:\n            res = _context.sent;\n            console.log('response from server: ', res.data);\n\n            if (!res.data.error) {\n              _context.next = 10;\n              break;\n            }\n\n            alert(res.data.error);\n            _context.next = 13;\n            break;\n\n          case 10:\n            alert('successfully created account');\n            _context.next = 13;\n            return _regeneratorRuntime.awrap(storeData({\n              username: username,\n              userId: res.data.userId,\n              token: res.data.token\n            }));\n\n          case 13:\n            _context.next = 16;\n            break;\n\n          case 15:\n            alert('password must be longer than 5 characters');\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function signIn() {\n    var res;\n    return _regeneratorRuntime.async(function signIn$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(password.length > 5)) {\n              _context2.next = 14;\n              break;\n            }\n\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(axios.post('http://localhost:5000/signin', {\n              username: username,\n              password: password\n            }));\n\n          case 3:\n            res = _context2.sent;\n            console.log(res.data);\n\n            if (!res.data.error) {\n              _context2.next = 9;\n              break;\n            }\n\n            alert('error: ', res.data.error);\n            _context2.next = 12;\n            break;\n\n          case 9:\n            if (!res.data.token) {\n              _context2.next = 12;\n              break;\n            }\n\n            _context2.next = 12;\n            return _regeneratorRuntime.awrap(storeData({\n              username: username,\n              userId: res.data.userId,\n              token: res.data.token\n            }));\n\n          case 12:\n            _context2.next = 15;\n            break;\n\n          case 14:\n            alert('password needs to be longer than 5 characters');\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function storeData(value) {\n    var jsonValue;\n    return _regeneratorRuntime.async(function storeData$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            jsonValue = JSON.stringify(value);\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('username', jsonValue.username));\n\n          case 4:\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('userId', jsonValue.userId));\n\n          case 6:\n            _context3.next = 8;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('token', jsonValue.token));\n\n          case 8:\n            props.navigation.navigate('Alarms');\n            _context3.next = 14;\n            break;\n\n          case 11:\n            _context3.prev = 11;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0.message);\n\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  }\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"SleepEdo\"), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: setUsername,\n    placeholder: \"username\",\n    value: username,\n    placeholderTextColor: \"grey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: setPassword,\n    value: password,\n    placeholder: \"password\",\n    placeholderTextColor: \"grey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: setEmail,\n    value: email,\n    placeholder: \"email\",\n    placeholderTextColor: \"grey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: createAccount,\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, \"Sign Up\")), React.createElement(TouchableOpacity, {\n    onPress: signIn,\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, \"Sign In\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#222',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  input: {\n    width: 270,\n    height: 60,\n    margin: 12,\n    borderWidth: 1,\n    padding: 6,\n    paddingLeft: 10,\n    fontSize: 20,\n    borderColor: '#e1e1e1',\n    color: '#e1e1e1'\n  },\n  title: {\n    fontSize: 50,\n    color: '#e1e1e1',\n    marginBottom: 60\n  },\n  button: {\n    width: 180,\n    height: 60,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#E94560',\n    marginTop: 50,\n    borderRadius: 50\n  },\n  buttonText: {\n    fontSize: 20,\n    color: '#e1e1e1'\n  }\n});","map":{"version":3,"sources":["C:/Users/Alden/Documents/Code/javascript/mobile/sleepedo2main/sleepedo2_client/components/login.js"],"names":["React","useState","axios","AsyncStorage","Login","props","username","setUsername","password","setPassword","email","setEmail","createAccount","console","log","length","post","res","data","error","alert","storeData","userId","token","signIn","value","jsonValue","JSON","stringify","setItem","navigation","navigate","message","styles","container","title","input","button","buttonText","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","height","margin","borderWidth","padding","paddingLeft","fontSize","borderColor","color","marginBottom","display","marginTop","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { TouchableOpacity, Button, SafeAreaView, StyleSheet, Text, TextInput, View } from 'react-native';\r\nimport axios from 'axios';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport default function Login(props) {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n\r\n    async function createAccount() {\r\n        console.log('trying to create account');\r\n        if (password.length > 5) {\r\n            let res = await axios.post('http://localhost:5000/createaccount', {\r\n                username: username,\r\n                password: password,\r\n                email: email\r\n            })\r\n            console.log('response from server: ', res.data);\r\n\r\n            if (res.data.error) {\r\n                alert(res.data.error);\r\n            }\r\n            else {\r\n                alert('successfully created account');\r\n                await storeData({ username: username, userId: res.data.userId, token: res.data.token });\r\n            }\r\n        }\r\n        else {\r\n            alert('password must be longer than 5 characters');\r\n        }\r\n    }\r\n\r\n    async function signIn() {\r\n        if (password.length > 5) {\r\n            let res = await axios.post('http://localhost:5000/signin', {\r\n                username: username,\r\n                password: password,\r\n            })\r\n            console.log(res.data);\r\n            if (res.data.error) {\r\n                alert('error: ', res.data.error);\r\n            }\r\n            else if (res.data.token) {\r\n                await storeData({ username: username, userId: res.data.userId, token: res.data.token });\r\n            }\r\n        }\r\n        else {\r\n            alert('password needs to be longer than 5 characters');\r\n        }\r\n    }\r\n\r\n    async function storeData(value) {\r\n        try {\r\n            const jsonValue = JSON.stringify(value);\r\n            await AsyncStorage.setItem('username', jsonValue.username);\r\n            await AsyncStorage.setItem('userId', jsonValue.userId);\r\n            await AsyncStorage.setItem('token', jsonValue.token);\r\n            props.navigation.navigate('Alarms');\r\n\r\n        } catch (e) {\r\n            console.log(e.message);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <SafeAreaView style={styles.container}>\r\n            <Text style={styles.title}>SleepEdo</Text>\r\n            <TextInput\r\n                style={styles.input}\r\n                onChangeText={setUsername}\r\n                placeholder=\"username\"\r\n                value={username}\r\n                placeholderTextColor=\"grey\"\r\n\r\n            />\r\n            <TextInput\r\n                style={styles.input}\r\n                onChangeText={setPassword}\r\n                value={password}\r\n                placeholder=\"password\"\r\n                placeholderTextColor=\"grey\"\r\n            />\r\n            <TextInput\r\n                style={styles.input}\r\n                onChangeText={setEmail}\r\n                value={email}\r\n                placeholder=\"email\"\r\n                placeholderTextColor=\"grey\"\r\n            />\r\n            <TouchableOpacity onPress={createAccount} style={styles.button}>\r\n                <Text style={styles.buttonText}>Sign Up</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity onPress={signIn} style={styles.button}>\r\n                <Text style={styles.buttonText}>Sign In</Text>\r\n            </TouchableOpacity>\r\n\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#222',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    input: {\r\n        width: 270,\r\n        height: 60,\r\n        margin: 12,\r\n        borderWidth: 1,\r\n        padding: 6,\r\n        paddingLeft: 10,\r\n        fontSize: 20,\r\n        borderColor: '#e1e1e1',\r\n        color: '#e1e1e1',\r\n    },\r\n    title: {\r\n        fontSize: 50,\r\n        color: '#e1e1e1',\r\n        marginBottom: 60,\r\n    },\r\n    button: {\r\n        width: 180,\r\n        height: 60,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: '#E94560',\r\n        marginTop: 50,\r\n        borderRadius: 50,\r\n    },\r\n    buttonText: {\r\n        fontSize: 20,\r\n        color: '#e1e1e1'\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}
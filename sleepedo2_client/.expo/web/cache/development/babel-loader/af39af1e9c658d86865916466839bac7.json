{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useRef, useState } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport moment from 'moment-jalaali';\nvar m = moment();\nvar jalaaliConfigs = {\n  dayNames: ['شنبه', 'یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه', 'پنجشنبه', 'جمعه'],\n  dayNamesShort: ['ش', 'ی', 'د', 'س', 'چ', 'پ', 'ج'],\n  monthNames: ['فروردین', 'اردیبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'],\n  selectedFormat: 'jYYYY/jMM/jDD',\n  dateFormat: 'jYYYY/jMM/jDD',\n  monthYearFormat: 'jYYYY jMM',\n  timeFormat: 'HH:mm ',\n  hour: 'ساعت',\n  minute: 'دقیقه',\n  timeSelect: 'انتخاب',\n  timeClose: 'بستن'\n};\nvar gregorianConfigs = {\n  dayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  dayNamesShort: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n  selectedFormat: 'YYYY/MM/DD',\n  dateFormat: 'YYYY/MM/DD',\n  monthYearFormat: 'YYYY MM',\n  timeFormat: 'HH:mm',\n  hour: 'Hour',\n  minute: 'Minute',\n  timeSelect: 'Select',\n  timeClose: 'Close'\n};\n\nvar utils = function () {\n  function utils(_ref) {\n    var _this = this;\n\n    var _minimumDate = _ref.minimumDate,\n        _maximumDate = _ref.maximumDate,\n        _isGregorian = _ref.isGregorian,\n        mode = _ref.mode,\n        reverse = _ref.reverse,\n        configs = _ref.configs;\n\n    _classCallCheck(this, utils);\n\n    this.getFormated = function (date) {\n      var formatName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'selectedFormat';\n      return date.format(_this.config[formatName]);\n    };\n\n    this.getFormatedDate = function () {\n      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();\n      var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'YYYY/MM/DD';\n      return moment(date).format(format);\n    };\n\n    this.getTime = function (time) {\n      return _this.getDate(time).format(_this.config.timeFormat);\n    };\n\n    this.getToday = function () {\n      return _this.getFormated(m, 'dateFormat');\n    };\n\n    this.getMonthName = function (month) {\n      return _this.config.monthNames[month];\n    };\n\n    this.toPersianNumber = function (value) {\n      var isGregorian = _this.data.isGregorian;\n      return isGregorian ? _this.toEnglish(String(value)) : String(value).replace(/[0-9]/g, function (w) {\n        return String.fromCharCode(w.charCodeAt(0) + '۰'.charCodeAt(0) - 48);\n      });\n    };\n\n    this.toEnglish = function (value) {\n      var charCodeZero = '۰'.charCodeAt(0);\n      return value.replace(/[۰-۹]/g, function (w) {\n        return w.charCodeAt(0) - charCodeZero;\n      });\n    };\n\n    this.getDate = function (time) {\n      return moment(time, _this.config.selectedFormat);\n    };\n\n    this.getMonthYearText = function (time) {\n      var isGregorian = _this.data.isGregorian;\n\n      var date = _this.getDate(time);\n\n      var year = _this.toPersianNumber(isGregorian ? date.year() : date.jYear());\n\n      var month = _this.getMonthName(isGregorian ? date.month() : date.jMonth());\n\n      return month + \" \" + year;\n    };\n\n    this.checkMonthDisabled = function (time) {\n      var _this$data = _this.data,\n          minimumDate = _this$data.minimumDate,\n          maximumDate = _this$data.maximumDate,\n          isGregorian = _this$data.isGregorian;\n\n      var date = _this.getDate(time);\n\n      var disabled = false;\n\n      if (minimumDate) {\n        var lastDayInMonth = isGregorian ? date.date(29) : date.jDate(29);\n        disabled = lastDayInMonth < _this.getDate(minimumDate);\n      }\n\n      if (maximumDate && !disabled) {\n        var firstDayInMonth = isGregorian ? date.date(1) : date.jDate(1);\n        disabled = firstDayInMonth > _this.getDate(maximumDate);\n      }\n\n      return disabled;\n    };\n\n    this.checkArrowMonthDisabled = function (time, next) {\n      var isGregorian = _this.data.isGregorian;\n\n      var date = _this.getDate(time);\n\n      return _this.checkMonthDisabled(_this.getFormated(date.add(next ? -1 : 1, isGregorian ? 'month' : 'jMonth')));\n    };\n\n    this.checkYearDisabled = function (year, next) {\n      var _this$data2 = _this.data,\n          minimumDate = _this$data2.minimumDate,\n          maximumDate = _this$data2.maximumDate,\n          isGregorian = _this$data2.isGregorian;\n      var y = isGregorian ? _this.getDate(next ? maximumDate : minimumDate).year() : _this.getDate(next ? maximumDate : minimumDate).jYear();\n      return next ? year >= y : year <= y;\n    };\n\n    this.checkSelectMonthDisabled = function (time, month) {\n      var isGregorian = _this.data.isGregorian;\n\n      var date = _this.getDate(time);\n\n      var dateWithNewMonth = isGregorian ? date.month(month) : date.jMonth(month);\n      return _this.checkMonthDisabled(_this.getFormated(dateWithNewMonth));\n    };\n\n    this.validYear = function (time, year) {\n      var _this$data3 = _this.data,\n          minimumDate = _this$data3.minimumDate,\n          maximumDate = _this$data3.maximumDate,\n          isGregorian = _this$data3.isGregorian;\n      var date = isGregorian ? _this.getDate(time).year(year) : _this.getDate(time).jYear(year);\n\n      var validDate = _this.getFormated(date);\n\n      if (minimumDate && date < _this.getDate(minimumDate)) {\n        validDate = minimumDate;\n      }\n\n      if (maximumDate && date > _this.getDate(maximumDate)) {\n        validDate = maximumDate;\n      }\n\n      return validDate;\n    };\n\n    this.getMonthDays = function (time) {\n      var _this$data4 = _this.data,\n          minimumDate = _this$data4.minimumDate,\n          maximumDate = _this$data4.maximumDate,\n          isGregorian = _this$data4.isGregorian;\n\n      var date = _this.getDate(time);\n\n      var currentMonthDays = isGregorian ? date.daysInMonth() : moment.jDaysInMonth(date.jYear(), date.jMonth());\n      var firstDay = isGregorian ? date.date(1) : date.jDate(1);\n      var dayOfMonth = (firstDay.day() + Number(!isGregorian)) % 7;\n      return [].concat(_toConsumableArray(new Array(dayOfMonth)), _toConsumableArray(_toConsumableArray(new Array(currentMonthDays)).map(function (i, n) {\n        var thisDay = isGregorian ? date.date(n + 1) : date.jDate(n + 1);\n        var disabled = false;\n\n        if (minimumDate) {\n          disabled = thisDay < _this.getDate(minimumDate);\n        }\n\n        if (maximumDate && !disabled) {\n          disabled = thisDay > _this.getDate(maximumDate);\n        }\n\n        date = _this.getDate(time);\n        return {\n          dayString: _this.toPersianNumber(n + 1),\n          day: n + 1,\n          date: _this.getFormated(isGregorian ? date.date(n + 1) : date.jDate(n + 1)),\n          disabled: disabled\n        };\n      })));\n    };\n\n    this.useMonthAnimation = function (activeDate, distance) {\n      var onEnd = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {\n        return null;\n      };\n\n      var _useState = useState(activeDate),\n          _useState2 = _slicedToArray(_useState, 2),\n          lastDate = _useState2[0],\n          setLastDate = _useState2[1];\n\n      var _useState3 = useState(null),\n          _useState4 = _slicedToArray(_useState3, 2),\n          changeWay = _useState4[0],\n          setChangeWay = _useState4[1];\n\n      var monthYearAnimation = useRef(new Animated.Value(0)).current;\n\n      var changeMonthAnimation = function changeMonthAnimation(type) {\n        setChangeWay(type);\n        setLastDate(activeDate);\n        monthYearAnimation.setValue(1);\n        Animated.timing(monthYearAnimation, {\n          toValue: 0,\n          duration: 300,\n          useNativeDriver: true,\n          easing: Easing.bezier(0.33, 0.66, 0.54, 1)\n        }).start(onEnd);\n      };\n\n      var shownAnimation = {\n        opacity: monthYearAnimation.interpolate({\n          inputRange: [0, 1],\n          outputRange: [1, 1]\n        }),\n        transform: [{\n          translateX: monthYearAnimation.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, changeWay === 'NEXT' ? -distance : distance]\n          })\n        }]\n      };\n      var hiddenAnimation = {\n        opacity: monthYearAnimation,\n        transform: [{\n          translateX: monthYearAnimation.interpolate({\n            inputRange: [0, 1],\n            outputRange: [changeWay === 'NEXT' ? distance : -distance, 0]\n          })\n        }]\n      };\n      return [{\n        lastDate: lastDate,\n        shownAnimation: shownAnimation,\n        hiddenAnimation: hiddenAnimation\n      }, changeMonthAnimation];\n    };\n\n    this.data = {\n      minimumDate: _minimumDate,\n      maximumDate: _maximumDate,\n      isGregorian: _isGregorian,\n      reverse: reverse === 'unset' ? !_isGregorian : reverse\n    };\n    this.config = _isGregorian ? gregorianConfigs : jalaaliConfigs;\n    this.config = _objectSpread(_objectSpread({}, this.config), configs);\n\n    if (mode === 'time' || mode === 'datepicker') {\n      this.config.selectedFormat = this.config.dateFormat + ' ' + this.config.timeFormat;\n    }\n  }\n\n  _createClass(utils, [{\n    key: \"flexDirection\",\n    get: function get() {\n      return {\n        flexDirection: this.data.reverse ? I18nManager.isRTL ? 'row' : 'row-reverse' : 'row'\n      };\n    }\n  }]);\n\n  return utils;\n}();\n\nexport { utils };","map":{"version":3,"sources":["C:/Users/Alden/Documents/Code/javascript/mobile/sleepedo2main/sleepedo2_client/node_modules/react-native-modern-datepicker/src/utils.js"],"names":["useRef","useState","moment","m","jalaaliConfigs","dayNames","dayNamesShort","monthNames","selectedFormat","dateFormat","monthYearFormat","timeFormat","hour","minute","timeSelect","timeClose","gregorianConfigs","utils","minimumDate","maximumDate","isGregorian","mode","reverse","configs","getFormated","date","formatName","format","config","getFormatedDate","Date","getTime","time","getDate","getToday","getMonthName","month","toPersianNumber","value","data","toEnglish","String","replace","w","fromCharCode","charCodeAt","charCodeZero","getMonthYearText","year","jYear","jMonth","checkMonthDisabled","disabled","lastDayInMonth","jDate","firstDayInMonth","checkArrowMonthDisabled","next","add","checkYearDisabled","y","checkSelectMonthDisabled","dateWithNewMonth","validYear","validDate","getMonthDays","currentMonthDays","daysInMonth","jDaysInMonth","firstDay","dayOfMonth","day","Number","Array","map","i","n","thisDay","dayString","useMonthAnimation","activeDate","distance","onEnd","lastDate","setLastDate","changeWay","setChangeWay","monthYearAnimation","Animated","Value","current","changeMonthAnimation","type","setValue","timing","toValue","duration","useNativeDriver","easing","Easing","bezier","start","shownAnimation","opacity","interpolate","inputRange","outputRange","transform","translateX","hiddenAnimation","flexDirection","I18nManager","isRTL"],"mappings":"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","sourcesContent":["import {useRef, useState} from 'react';\nimport {Animated, Easing, I18nManager} from 'react-native';\nimport moment from 'moment-jalaali';\n\nconst m = moment();\nconst jalaaliConfigs = {\n  dayNames: ['شنبه', 'یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه', 'پنجشنبه', 'جمعه'],\n  dayNamesShort: ['ش', 'ی', 'د', 'س', 'چ', 'پ', 'ج'],\n  monthNames: [\n    'فروردین',\n    'اردیبهشت',\n    'خرداد',\n    'تیر',\n    'مرداد',\n    'شهریور',\n    'مهر',\n    'آبان',\n    'آذر',\n    'دی',\n    'بهمن',\n    'اسفند',\n  ],\n  selectedFormat: 'jYYYY/jMM/jDD',\n  dateFormat: 'jYYYY/jMM/jDD',\n  monthYearFormat: 'jYYYY jMM',\n  timeFormat: 'HH:mm ',\n  hour: 'ساعت',\n  minute: 'دقیقه',\n  timeSelect: 'انتخاب',\n  timeClose: 'بستن',\n};\nconst gregorianConfigs = {\n  dayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  dayNamesShort: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  monthNames: [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ],\n  selectedFormat: 'YYYY/MM/DD',\n  dateFormat: 'YYYY/MM/DD',\n  monthYearFormat: 'YYYY MM',\n  timeFormat: 'HH:mm',\n  hour: 'Hour',\n  minute: 'Minute',\n  timeSelect: 'Select',\n  timeClose: 'Close',\n};\n\nclass utils {\n  constructor({minimumDate, maximumDate, isGregorian, mode, reverse, configs}) {\n    this.data = {\n      minimumDate,\n      maximumDate,\n      isGregorian,\n      reverse: reverse === 'unset' ? !isGregorian : reverse,\n    };\n    this.config = isGregorian ? gregorianConfigs : jalaaliConfigs;\n    this.config = {...this.config, ...configs};\n    if (mode === 'time' || mode === 'datepicker') {\n      this.config.selectedFormat = this.config.dateFormat + ' ' + this.config.timeFormat;\n    }\n  }\n\n  get flexDirection() {\n    return {flexDirection: this.data.reverse ? (I18nManager.isRTL ? 'row' : 'row-reverse') : 'row'};\n  }\n\n  getFormated = (date, formatName = 'selectedFormat') => date.format(this.config[formatName]);\n\n  getFormatedDate = (date = new Date(), format = 'YYYY/MM/DD') => moment(date).format(format);\n\n  getTime = (time) => this.getDate(time).format(this.config.timeFormat);\n\n  getToday = () => this.getFormated(m, 'dateFormat');\n\n  getMonthName = (month) => this.config.monthNames[month];\n\n  toPersianNumber = (value) => {\n    const {isGregorian} = this.data;\n    return isGregorian\n      ? this.toEnglish(String(value))\n      : String(value).replace(/[0-9]/g, (w) =>\n          String.fromCharCode(w.charCodeAt(0) + '۰'.charCodeAt(0) - 48),\n        );\n  };\n\n  toEnglish = (value) => {\n    const charCodeZero = '۰'.charCodeAt(0);\n    return value.replace(/[۰-۹]/g, (w) => w.charCodeAt(0) - charCodeZero);\n  };\n\n  getDate = (time) => moment(time, this.config.selectedFormat);\n\n  getMonthYearText = (time) => {\n    const {isGregorian} = this.data;\n    const date = this.getDate(time);\n    const year = this.toPersianNumber(isGregorian ? date.year() : date.jYear());\n    const month = this.getMonthName(isGregorian ? date.month() : date.jMonth());\n    return `${month} ${year}`;\n  };\n\n  checkMonthDisabled = (time) => {\n    const {minimumDate, maximumDate, isGregorian} = this.data;\n    const date = this.getDate(time);\n    let disabled = false;\n    if (minimumDate) {\n      const lastDayInMonth = isGregorian ? date.date(29) : date.jDate(29);\n      disabled = lastDayInMonth < this.getDate(minimumDate);\n    }\n    if (maximumDate && !disabled) {\n      const firstDayInMonth = isGregorian ? date.date(1) : date.jDate(1);\n      disabled = firstDayInMonth > this.getDate(maximumDate);\n    }\n    return disabled;\n  };\n\n  checkArrowMonthDisabled = (time, next) => {\n    const {isGregorian} = this.data;\n    const date = this.getDate(time);\n    return this.checkMonthDisabled(\n      this.getFormated(date.add(next ? -1 : 1, isGregorian ? 'month' : 'jMonth')),\n    );\n  };\n\n  checkYearDisabled = (year, next) => {\n    const {minimumDate, maximumDate, isGregorian} = this.data;\n    const y = isGregorian\n      ? this.getDate(next ? maximumDate : minimumDate).year()\n      : this.getDate(next ? maximumDate : minimumDate).jYear();\n    return next ? year >= y : year <= y;\n  };\n\n  checkSelectMonthDisabled = (time, month) => {\n    const {isGregorian} = this.data;\n    const date = this.getDate(time);\n    const dateWithNewMonth = isGregorian ? date.month(month) : date.jMonth(month);\n    return this.checkMonthDisabled(this.getFormated(dateWithNewMonth));\n  };\n\n  validYear = (time, year) => {\n    const {minimumDate, maximumDate, isGregorian} = this.data;\n    const date = isGregorian ? this.getDate(time).year(year) : this.getDate(time).jYear(year);\n    let validDate = this.getFormated(date);\n    if (minimumDate && date < this.getDate(minimumDate)) {\n      validDate = minimumDate;\n    }\n    if (maximumDate && date > this.getDate(maximumDate)) {\n      validDate = maximumDate;\n    }\n    return validDate;\n  };\n\n  getMonthDays = (time) => {\n    const {minimumDate, maximumDate, isGregorian} = this.data;\n    let date = this.getDate(time);\n    const currentMonthDays = isGregorian\n      ? date.daysInMonth()\n      : moment.jDaysInMonth(date.jYear(), date.jMonth());\n    const firstDay = isGregorian ? date.date(1) : date.jDate(1);\n    const dayOfMonth = (firstDay.day() + Number(!isGregorian)) % 7;\n    return [\n      ...new Array(dayOfMonth),\n      ...[...new Array(currentMonthDays)].map((i, n) => {\n        const thisDay = isGregorian ? date.date(n + 1) : date.jDate(n + 1);\n        let disabled = false;\n        if (minimumDate) {\n          disabled = thisDay < this.getDate(minimumDate);\n        }\n        if (maximumDate && !disabled) {\n          disabled = thisDay > this.getDate(maximumDate);\n        }\n\n        date = this.getDate(time);\n        return {\n          dayString: this.toPersianNumber(n + 1),\n          day: n + 1,\n          date: this.getFormated(isGregorian ? date.date(n + 1) : date.jDate(n + 1)),\n          disabled,\n        };\n      }),\n    ];\n  };\n\n  useMonthAnimation = (activeDate, distance, onEnd = () => null) => {\n    const [lastDate, setLastDate] = useState(activeDate);\n    const [changeWay, setChangeWay] = useState(null);\n    const monthYearAnimation = useRef(new Animated.Value(0)).current;\n\n    const changeMonthAnimation = (type) => {\n      setChangeWay(type);\n      setLastDate(activeDate);\n      monthYearAnimation.setValue(1);\n      Animated.timing(monthYearAnimation, {\n        toValue: 0,\n        duration: 300,\n        useNativeDriver: true,\n        easing: Easing.bezier(0.33, 0.66, 0.54, 1),\n      }).start(onEnd);\n    };\n\n    const shownAnimation = {\n      opacity: monthYearAnimation.interpolate({\n        inputRange: [0, 1],\n        outputRange: [1, 1],\n      }),\n      transform: [\n        {\n          translateX: monthYearAnimation.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, changeWay === 'NEXT' ? -distance : distance],\n          }),\n        },\n      ],\n    };\n\n    const hiddenAnimation = {\n      opacity: monthYearAnimation,\n      transform: [\n        {\n          translateX: monthYearAnimation.interpolate({\n            inputRange: [0, 1],\n            outputRange: [changeWay === 'NEXT' ? distance : -distance, 0],\n          }),\n        },\n      ],\n    };\n\n    return [{lastDate, shownAnimation, hiddenAnimation}, changeMonthAnimation];\n  };\n}\n\nexport {utils};\n"]},"metadata":{},"sourceType":"module"}
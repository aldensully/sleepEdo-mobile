{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alden\\\\Documents\\\\Code\\\\javascript\\\\mobile\\\\sleepedo2main\\\\sleepedo2_client\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { SocketContext, socket } from \"./components/socket\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Login from \"./components/login\";\nimport Home from \"./components/home\";\nimport Store from \"./components/store\";\nimport Chatbox from \"./components/chatbox\";\nimport PreBuiltChat from \"./components/prebuiltChat\";\nvar Stack = createNativeStackNavigator();\n\nfunction getLoggedIn() {\n  var token;\n  return _regeneratorRuntime.async(function getLoggedIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          token = sessionStorage.getItem('token');\n\n          if (!token) {\n            _context.next = 3;\n            break;\n          }\n\n          return _context.abrupt(\"return\", true);\n\n        case 3:\n          return _context.abrupt(\"return\", false);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport default function App() {\n  var auth = getLoggedIn();\n  return auth ? React.createElement(SocketContext.Provider, {\n    value: socket,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    options: {\n      headerShown: false\n    },\n    name: \"Home\",\n    component: Home,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    options: {\n      headerShown: false\n    },\n    name: \"Login\",\n    component: Login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    options: {\n      headerShown: false\n    },\n    name: \"Chat\",\n    component: PreBuiltChat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    options: {\n      headerShown: false\n    },\n    name: \"Store\",\n    component: Store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  })))) : React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    options: {\n      headerShown: false\n    },\n    name: \"Login\",\n    component: Login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/Alden/Documents/Code/javascript/mobile/sleepedo2main/sleepedo2_client/App.js"],"names":["StatusBar","React","useState","useEffect","NavigationContainer","createNativeStackNavigator","SocketContext","socket","AsyncStorage","Login","Home","Store","Chatbox","PreBuiltChat","Stack","getLoggedIn","token","sessionStorage","getItem","App","auth","headerShown"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,SAASC,aAAT,EAAwBC,MAAxB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AAEA,OAAOC,KAAP;AACA,OAAOC,IAAP;AACA,OAAOC,KAAP;AACA,OAAOC,OAAP;AACA,OAAOC,YAAP;AACA,IAAMC,KAAK,GAAGT,0BAA0B,EAAxC;;AAGA,SAAeU,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQC,UAAAA,KAFR,GAEgBC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAFhB;;AAAA,eAGMF,KAHN;AAAA;AAAA;AAAA;;AAAA,2CAGoB,IAHpB;;AAAA;AAAA,2CAIS,KAJT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOA,eAAe,SAASG,GAAT,GAAe;AAE5B,MAAMC,IAAI,GAAGL,WAAW,EAAxB;AAEA,SAAOK,IAAI,GACT,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEb,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,OAAO,EAAE;AAAEc,MAAAA,WAAW,EAAE;AAAf,KAAvB;AAA+C,IAAA,IAAI,EAAC,MAApD;AAA2D,IAAA,SAAS,EAAEX,IAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,OAAO,EAAE;AAAEW,MAAAA,WAAW,EAAE;AAAf,KAAvB;AAA+C,IAAA,IAAI,EAAC,OAApD;AAA4D,IAAA,SAAS,EAAEZ,KAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,OAAO,EAAE;AAAEY,MAAAA,WAAW,EAAE;AAAf,KAAvB;AAA+C,IAAA,IAAI,EAAC,MAApD;AAA2D,IAAA,SAAS,EAAER,YAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,OAAO,EAAE;AAAEQ,MAAAA,WAAW,EAAE;AAAf,KAAvB;AAA+C,IAAA,IAAI,EAAC,OAApD;AAA4D,IAAA,SAAS,EAAEV,KAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CADF,CADS,GAYT,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,OAAO,EAAE;AAAEU,MAAAA,WAAW,EAAE;AAAf,KAAvB;AAA+C,IAAA,IAAI,EAAC,OAApD;AAA4D,IAAA,SAAS,EAAEZ,KAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAZF;AAkBD","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport { TouchableOpacity, Button, SafeAreaView, StyleSheet, Text, TextInput, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { SocketContext, socket } from './components/socket';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport Login from './components/login';\nimport Home from './components/home';\nimport Store from './components/store';\nimport Chatbox from './components/chatbox';\nimport PreBuiltChat from './components/prebuiltChat';\nconst Stack = createNativeStackNavigator();\n\n\nasync function getLoggedIn() {\n  // const token = await AsyncStorage.getItem('token');\n  const token = sessionStorage.getItem('token');\n  if (token) return true;\n  return false;\n}\n\nexport default function App() {\n\n  const auth = getLoggedIn();\n\n  return auth ? (\n    <SocketContext.Provider value={socket}>\n      <NavigationContainer>\n        <Stack.Navigator>\n          <Stack.Screen options={{ headerShown: false }} name=\"Home\" component={Home} />\n          <Stack.Screen options={{ headerShown: false }} name=\"Login\" component={Login} />\n          <Stack.Screen options={{ headerShown: false }} name=\"Chat\" component={PreBuiltChat} />\n          <Stack.Screen options={{ headerShown: false }} name=\"Store\" component={Store} />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </SocketContext.Provider>\n  ) : (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen options={{ headerShown: false }} name=\"Login\" component={Login} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  )\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alden\\\\Documents\\\\Code\\\\javascript\\\\mobile\\\\sleepedo2main\\\\sleepedo2_client\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { SocketContext, socket } from \"./components/socket\";\nimport Login from \"./components/login\";\nimport Home from \"./components/home\";\nimport Store from \"./components/store\";\nimport { withAuthenticator } from 'aws-amplify-react-native';\nimport Amplify, { API, Auth, DataStore, graphqlOperation } from 'aws-amplify';\nimport awsconfig from \"./src/aws-exports\";\nimport { getUser } from \"./src/graphql/queries\";\nimport { createUser } from \"./src/graphql/mutations\";\nAmplify.configure(awsconfig);\nAmplify.configure({\n  Analytics: {\n    disabled: true\n  }\n});\nvar Stack = createNativeStackNavigator();\n\nfunction App() {\n  useEffect(function () {\n    var fetchUser = function fetchUser() {\n      var userInfo, userData, newUser;\n      return _regeneratorRuntime.async(function fetchUser$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Auth.currentAuthenticatedUser({\n                bypassCache: true\n              }));\n\n            case 2:\n              userInfo = _context.sent;\n\n              if (!userInfo) {\n                _context.next = 15;\n                break;\n              }\n\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(getUser, {\n                id: userInfo.attributes.sub\n              })));\n\n            case 6:\n              userData = _context.sent;\n              console.log(userData);\n\n              if (!userData.data.getUser) {\n                _context.next = 12;\n                break;\n              }\n\n              console.log('user already in database');\n              _context.next = 15;\n              break;\n\n            case 12:\n              newUser = {\n                username: userInfo.username,\n                email: userInfo.attributes.email,\n                phoneNumber: userInfo.attributes.phone_number,\n                id: userInfo.attributes.sub\n              };\n              _context.next = 15;\n              return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createUser, {\n                input: newUser\n              })));\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchUser();\n  }, []);\n  return React.createElement(SocketContext.Provider, {\n    value: socket,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Alarms\",\n    component: Home,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Store\",\n    component: Store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default withAuthenticator(App);","map":{"version":3,"sources":["C:/Users/Alden/Documents/Code/javascript/mobile/sleepedo2main/sleepedo2_client/App.js"],"names":["StatusBar","React","useState","useEffect","NavigationContainer","createNativeStackNavigator","SocketContext","socket","Login","Home","Store","withAuthenticator","Amplify","API","Auth","DataStore","graphqlOperation","awsconfig","getUser","createUser","configure","Analytics","disabled","Stack","App","fetchUser","currentAuthenticatedUser","bypassCache","userInfo","graphql","id","attributes","sub","userData","console","log","data","newUser","username","email","phoneNumber","phone_number","input"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport { TouchableOpacity, Button, SafeAreaView, StyleSheet, Text, TextInput, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { SocketContext, socket } from './components/socket';\n\nimport Login from './components/login';\nimport Home from './components/home';\nimport Store from './components/store';\n\nimport { withAuthenticator } from 'aws-amplify-react-native'\nimport Amplify, { API, Auth, DataStore, graphqlOperation } from 'aws-amplify';\nimport awsconfig from './src/aws-exports';\n\nimport { getUser } from './src/graphql/queries';\nimport { createUser } from './src/graphql/mutations';\n\nAmplify.configure(awsconfig);\nAmplify.configure({\n  Analytics: {\n    disabled: true,\n  },\n});\n\n\nconst Stack = createNativeStackNavigator();\n\nfunction App() {\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      const userInfo = await Auth.currentAuthenticatedUser({ bypassCache: true });\n\n      if (userInfo) {\n        const userData = await API.graphql(\n          graphqlOperation(getUser, { id: userInfo.attributes.sub })\n        )\n        console.log(userData);\n\n        if (userData.data.getUser) {\n          console.log('user already in database');\n        }\n        else {\n          const newUser = {\n            username: userInfo.username,\n            email: userInfo.attributes.email,\n            phoneNumber: userInfo.attributes.phone_number,\n            id: userInfo.attributes.sub\n          }\n\n          await API.graphql(\n            graphqlOperation(\n              createUser, { input: newUser }\n            )\n          )\n        }\n      }\n    }\n    fetchUser();\n  }, [])\n\n  return (\n    <SocketContext.Provider value={socket}>\n      <NavigationContainer>\n        <Stack.Navigator>\n          <Stack.Screen name=\"Alarms\" component={Home} />\n          <Stack.Screen name=\"Store\" component={Store} />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </SocketContext.Provider>\n  );\n}\nexport default withAuthenticator(App);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alden\\\\Documents\\\\Code\\\\javascript\\\\mobile\\\\sleepedo2main\\\\sleepedo2_client\\\\components\\\\chatbox.js\";\nimport React, { useState, useEffect, useContext, useCallback } from 'react';\nimport { SocketContext } from \"./socket\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TouchableOpacityBase } from \"react-native-web/dist/index\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport IonIcon from \"@expo/vector-icons/Ionicons\";\nexport default function Chatbox(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      dismissOpen = _useState2[0],\n      setDismissOpen = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dismissCount = _useState4[0],\n      setDismissCount = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      snoozeCount = _useState6[0],\n      setSnoozeCount = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      room = _useState8[0],\n      setRoom = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      alarmId = _useState10[0],\n      setAlarmId = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      disconnected = _useState12[0],\n      setDisconnected = _useState12[1];\n\n  var _useState13 = useState(true),\n      _useState14 = _slicedToArray(_useState13, 2),\n      modalOpen = _useState14[0],\n      setModalOpen = _useState14[1];\n\n  var socket = useContext(SocketContext);\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      text = _useState16[0],\n      setText = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      partner = _useState18[0],\n      setPartner = _useState18[1];\n\n  var _useState19 = useState(60),\n      _useState20 = _slicedToArray(_useState19, 2),\n      timeLeft = _useState20[0],\n      setTimeLeft = _useState20[1];\n\n  var getMessage = useCallback(function (message) {\n    console.log('received message: ', message);\n  }, []);\n  var triggered = useCallback(function (room, alarmId) {\n    console.log('joining room: ', room);\n    setRoom(room);\n    setAlarmId(alarmId);\n    setModalOpen(true);\n  }, []);\n  var resetStuff = useCallback(function () {\n    setModalOpen(false);\n    setDismissOpen(true);\n    setSnoozeCount(0);\n    setDismissCount(0);\n  }, []);\n  var disconnection = useCallback(function () {\n    setDisconnected(true);\n    setModalOpen(false);\n  }, []);\n\n  function decrement() {\n    setTimeLeft(timeLeft - 1);\n  }\n\n  setInterval(decrement, 1000);\n  useEffect(function () {\n    socket.on('get-message', function (message) {\n      getMessage(message);\n    });\n    return function () {\n      socket.offAny();\n    };\n  }, [socket, getMessage]);\n\n  function back() {\n    props.navigation.navigate(\"Home\");\n  }\n\n  function dismiss() {\n    setDismissCount(dismissCount + 1);\n    socket.emit('send-dismiss', room, alarmId);\n    setDismissOpen(false);\n  }\n\n  function snooze() {\n    setSnoozeCount(snoozeCount + 1);\n    socket.emit('send-snooze', room, alarmId);\n    setDismissOpen(false);\n  }\n\n  var sendText = useCallback(function (e) {\n    e.preventDefault();\n    socket.emit('send-message', sessionStorage.getItem('username'), text, room);\n    addOutTexts(text);\n    setText('');\n  }, [socket, text]);\n\n  if (modalOpen) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.topbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: back,\n      style: styles.backButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, React.createElement(IonIcon, {\n      color: \"#e1e1e1\",\n      name: \"arrow-back-sharp\",\n      size: 25,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    })), React.createElement(Text, {\n      style: styles.topbarText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }, \"Chat - \", partner), React.createElement(Text, {\n      style: styles.countdown,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, \"00:\", timeLeft)));\n  } else return null;\n}\nvar styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    width: '100%',\n    height: '100%',\n    backgroundColor: '#222'\n  },\n  topbar: {\n    width: '100%',\n    height: 60,\n    backgroundColor: 'grey',\n    justifyContent: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center'\n  },\n  backButton: {\n    marginLeft: 20\n  },\n  topbarText: {\n    marginLeft: 10,\n    fontSize: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/Alden/Documents/Code/javascript/mobile/sleepedo2main/sleepedo2_client/components/chatbox.js"],"names":["React","useState","useEffect","useContext","useCallback","SocketContext","TouchableOpacityBase","Icon","IonIcon","Chatbox","props","dismissOpen","setDismissOpen","dismissCount","setDismissCount","snoozeCount","setSnoozeCount","room","setRoom","alarmId","setAlarmId","disconnected","setDisconnected","modalOpen","setModalOpen","socket","text","setText","partner","setPartner","timeLeft","setTimeLeft","getMessage","message","console","log","triggered","resetStuff","disconnection","decrement","setInterval","on","offAny","back","navigation","navigate","dismiss","emit","snooze","sendText","e","preventDefault","sessionStorage","getItem","addOutTexts","styles","container","topbar","backButton","topbarText","countdown","StyleSheet","create","display","width","height","backgroundColor","justifyContent","flexDirection","alignItems","marginLeft","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useCallback } from 'react';\r\nimport { SocketContext } from './socket';\r\nimport { TouchableOpacity, StyleSheet, Text, TextInput, View, TouchableOpacityBase } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport IonIcon from 'react-native-vector-icons/Ionicons';\r\n\r\n\r\n\r\nexport default function Chatbox(props) {\r\n\r\n    const [dismissOpen, setDismissOpen] = useState(false);\r\n    const [dismissCount, setDismissCount] = useState(0);\r\n    const [snoozeCount, setSnoozeCount] = useState(0);\r\n    const [room, setRoom] = useState('');\r\n    const [alarmId, setAlarmId] = useState('');\r\n    const [disconnected, setDisconnected] = useState(false);\r\n    const [modalOpen, setModalOpen] = useState(true);\r\n    const socket = useContext(SocketContext);\r\n    const [text, setText] = useState('');\r\n    const [partner, setPartner] = useState('');\r\n    const [timeLeft, setTimeLeft] = useState(60);\r\n\r\n    const getMessage = useCallback((message) => {\r\n        console.log('received message: ', message);\r\n\r\n    }, []);\r\n\r\n    const triggered = useCallback((room, alarmId) => {\r\n        console.log('joining room: ', room);\r\n        setRoom(room);\r\n        setAlarmId(alarmId);\r\n        setModalOpen(true);\r\n    }, []);\r\n\r\n    const resetStuff = useCallback(() => {\r\n        setModalOpen(false);\r\n        setDismissOpen(true);\r\n        setSnoozeCount(0);\r\n        setDismissCount(0);\r\n    }, []);\r\n\r\n    const disconnection = useCallback(() => {\r\n        setDisconnected(true);\r\n        setModalOpen(false);\r\n    }, [])\r\n\r\n\r\n    function decrement() {\r\n        setTimeLeft(timeLeft - 1);\r\n    }\r\n    setInterval(decrement, 1000);\r\n\r\n    useEffect(() => {\r\n\r\n        socket.on('get-message', (message) => {\r\n            getMessage(message);\r\n        });\r\n        return () => {\r\n            socket.offAny();\r\n        }\r\n    }, [socket, getMessage])\r\n\r\n    function back() {\r\n        props.navigation.navigate(\"Home\");\r\n    }\r\n\r\n    function dismiss() {\r\n        setDismissCount(dismissCount + 1);\r\n        socket.emit('send-dismiss', room, alarmId);\r\n        setDismissOpen(false);\r\n    }\r\n    function snooze() {\r\n        setSnoozeCount(snoozeCount + 1);\r\n        socket.emit('send-snooze', room, alarmId);   //tell other user that you hit snooze\r\n        setDismissOpen(false);\r\n    }\r\n\r\n    const sendText = useCallback((e) => {\r\n        e.preventDefault();\r\n        socket.emit('send-message', sessionStorage.getItem('username'), text, room);   //when modal is closed this function is called\r\n        addOutTexts(text);\r\n        setText('');\r\n\r\n    }, [socket, text]);\r\n\r\n    // let dismissButton;\r\n    // if (dismissOpen) {\r\n    //     dismissButton =\r\n    //         <View style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center', position: 'relative', zIndex: 4 }}>\r\n    //             <TouchableOpacity onPress={snooze}>\r\n    //                 <Text>Vote Snooze {`(${snoozeCount}/2)`}</Text>\r\n    //             </TouchableOpacity>\r\n    //             <TouchableOpacity onPress={dismiss}>\r\n    //                 <Text>Dismiss {`(${dismissCount}/2)`}</Text>\r\n    //             </TouchableOpacity>\r\n    //         </View>\r\n    // }\r\n\r\n    if (modalOpen) {\r\n        return (\r\n            <View style={styles.container}>\r\n                <View style={styles.topbar}>\r\n                    <TouchableOpacity onPress={back} style={styles.backButton} >\r\n                        <IonIcon color=\"#e1e1e1\" name=\"arrow-back-sharp\" size={25} />\r\n                    </TouchableOpacity>\r\n                    <Text style={styles.topbarText}>Chat - {partner}</Text>\r\n                    <Text style={styles.countdown}>00:{timeLeft}</Text>\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n    else return null;\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        display: 'flex',\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: '#222'\r\n    },\r\n    topbar: {\r\n        width: '100%',\r\n        height: 60,\r\n        backgroundColor: 'grey',\r\n        justifyContent: 'center',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'center'\r\n    },\r\n    backButton: {\r\n        marginLeft: 20\r\n    },\r\n    topbarText: {\r\n        marginLeft: 10,\r\n        fontSize: 20\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}
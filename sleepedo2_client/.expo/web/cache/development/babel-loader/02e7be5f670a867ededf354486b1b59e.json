{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alden\\\\Documents\\\\Code\\\\javascript\\\\mobile\\\\sleepedo2main\\\\sleepedo2_client\\\\components\\\\prebuiltChat.js\";\nimport React, { useState, useCallback, useEffect, useContext } from 'react';\nimport { GiftedChat } from 'react-native-gifted-chat';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport IonIcon from \"@expo/vector-icons/Ionicons\";\nimport { SocketContext } from \"./socket\";\nexport default function PreBuiltChat(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _useState3 = useState('Rainbow69'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      partner = _useState4[0],\n      setPartner = _useState4[1];\n\n  var _useState5 = useState(59),\n      _useState6 = _slicedToArray(_useState5, 2),\n      timeLeft = _useState6[0],\n      setTimeLeft = _useState6[1];\n\n  var socket = useContext(SocketContext);\n  var getMessage = useCallback(function (message) {\n    console.log('received message: ', message);\n    setMessages([].concat(_toConsumableArray(messages), [{\n      _id: 1,\n      text: message,\n      createdAt: new Date(),\n      user: {\n        _id: 2,\n        name: 'Other user',\n        avatar: null\n      }\n    }]));\n    console.log('all messages: ', messages);\n  }, []);\n  useEffect(function () {\n    socket.on('get-message', function (message) {\n      getMessage(message);\n    });\n    return function () {\n      socket.offAny();\n    };\n  }, [socket, getMessage]);\n\n  var _onSend = useCallback(function () {\n    var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    console.log('sending: ', messages[0].text);\n    socket.emit('send-message', sessionStorage.getItem('username'), messages[0].text, 'test');\n    setMessages(function (previousMessages) {\n      return GiftedChat.append(previousMessages, messages);\n    });\n  }, []);\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.topbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.navigation.navigate(\"Home\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, React.createElement(IonIcon, {\n    style: styles.backIcon,\n    color: \"#e1e1e1\",\n    name: \"arrow-back-sharp\",\n    size: 25,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  })), React.createElement(Text, {\n    style: styles.topbartext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Chat - \", partner), React.createElement(Text, {\n    style: {\n      marginLeft: 60,\n      fontSize: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"00:\", timeLeft)), React.createElement(GiftedChat, {\n    messages: messages,\n    onSend: function onSend(message) {\n      return _onSend(message);\n    },\n    user: {\n      _id: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  topbar: {\n    width: '100%',\n    height: 60,\n    marginTop: 24,\n    backgroundColor: '#e1e1e1',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  backIcon: {\n    marginLeft: 15,\n    color: '#222'\n  },\n  topbartext: {\n    fontSize: 20,\n    marginLeft: 15,\n    maxWidth: '50%'\n  }\n});","map":{"version":3,"sources":["C:/Users/Alden/Documents/Code/javascript/mobile/sleepedo2main/sleepedo2_client/components/prebuiltChat.js"],"names":["React","useState","useCallback","useEffect","useContext","GiftedChat","IonIcon","SocketContext","PreBuiltChat","props","messages","setMessages","partner","setPartner","timeLeft","setTimeLeft","socket","getMessage","message","console","log","_id","text","createdAt","Date","user","name","avatar","on","offAny","onSend","emit","sessionStorage","getItem","previousMessages","append","styles","topbar","navigation","navigate","backIcon","topbartext","marginLeft","fontSize","StyleSheet","create","width","height","marginTop","backgroundColor","display","flexDirection","alignItems","color","maxWidth"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect, useContext } from 'react'\r\nimport { GiftedChat } from 'react-native-gifted-chat';\r\nimport { TouchableOpacity, StyleSheet, Text, TextInput, View, } from 'react-native';\r\nimport IonIcon from 'react-native-vector-icons/Ionicons';\r\nimport { SocketContext } from './socket';\r\n\r\nexport default function PreBuiltChat(props) {\r\n    const [messages, setMessages] = useState([]);\r\n    const [partner, setPartner] = useState('Rainbow69');\r\n    const [timeLeft, setTimeLeft] = useState(59);\r\n    const socket = useContext(SocketContext);\r\n\r\n    const getMessage = useCallback((message) => {\r\n        console.log('received message: ', message);\r\n        setMessages([\r\n            ...messages,\r\n            {\r\n                _id: 1,\r\n                text: message,\r\n                createdAt: new Date(),\r\n                user: {\r\n                    _id: 2,\r\n                    name: 'Other user',\r\n                    avatar: null\r\n                },\r\n            },\r\n        ]);\r\n        console.log('all messages: ', messages);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        socket.on('get-message', (message) => {\r\n            getMessage(message);\r\n        });\r\n\r\n        return () => {\r\n            socket.offAny();\r\n        }\r\n    }, [socket, getMessage]);\r\n\r\n    // function timerEnd(){\r\n    //     alert('time is up');\r\n    // }\r\n    // function decrement() {\r\n    //     if (timeLeft > 0) setTimeLeft(timeLeft - 1);\r\n    //     else timerEnd();\r\n    // }\r\n    // setInterval(decrement, 1000);\r\n\r\n\r\n    const onSend = useCallback((messages = []) => {\r\n        console.log('sending: ', messages[0].text);\r\n        socket.emit('send-message', sessionStorage.getItem('username'), messages[0].text, 'test');\r\n        setMessages(previousMessages => GiftedChat.append(previousMessages, messages))\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <View style={styles.topbar}>\r\n                <TouchableOpacity onPress={() => props.navigation.navigate(\"Home\")}>\r\n                    <IonIcon style={styles.backIcon} color=\"#e1e1e1\" name=\"arrow-back-sharp\" size={25} />\r\n                </TouchableOpacity>\r\n                <Text style={styles.topbartext}>Chat - {partner}</Text>\r\n                <Text style={{ marginLeft: 60, fontSize: 15 }}>00:{timeLeft}</Text>\r\n            </View>\r\n            <GiftedChat\r\n                messages={messages}\r\n                onSend={message => onSend(message)}\r\n                user={{\r\n                    _id: 1\r\n                }}\r\n            />\r\n        </>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    topbar: {\r\n        width: '100%',\r\n        height: 60,\r\n        marginTop: 24,\r\n        backgroundColor: '#e1e1e1',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center'\r\n    },\r\n    backIcon: {\r\n        marginLeft: 15,\r\n        color: '#222'\r\n    },\r\n    topbartext: {\r\n        fontSize: 20,\r\n        marginLeft: 15,\r\n        maxWidth: '50%',\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}